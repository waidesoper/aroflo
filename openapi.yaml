openapi: 3.0.1
info:
  title: AroFlo Extended API Platform
  description: "# Introduction\n\n__Note:__ This pages provides the documentation\
    \ of the AroFlo Extended API. For the documentation on the original API see: [https://apidocs.aroflo.com](https://apidocs.aroflo.com/?version=latest)\n\
    \nThe AroFlo API is built on HTTP and is restful with predictable resource URLs.\n\
    It returns HTTP response codes to indicate errors.\nIf also accepts and returns\
    \ JSON, XML or YAML in the HTTP body payload, defaulting to JSON if you have not\
    \ specified a preferred format.\n  \n## API Base URL\n\nThe AroFlo API base URL\
    \ is:\n\n> https://api.aroflo.com/\n\n\n## API Preview\n\nWe also offer a preview\
    \ of the next upcoming API releases for you to use for helping you keep your own\
    \ applications/usage up-to-date with the newest features, security updates and\
    \ bug fixes. The URL of the preview API is:\n\n> https://preview-api.aroflo.com/\n\
    \ \n\n__Note:__ The preview version should not be used in a production environment\
    \ as it represents an unreleased version of the API and is subject to change at\
    \ any time without notice.\n\n\n## Maintenance Periods\n\nOccasionally we may\
    \ deem it necessary to move the API service offline for planned maintenance periods\
    \ or unexpected outages. If this is the case, we will communicate this beforehand\
    \ via email communications or blog post.\n\nDuring these periods the API service\
    \ will respond with a status of [503 Service Unavailable](https://httpstatuses.com/503)\
    \ and the following payload:\n\n\n```json\n{\n  \"entropy\": \"some-random-value\"\
    \n  , \"error\" : {\n    \"code\": 503\n    , \"type\": \"service-unavailable\"\
    \n    , \"message\": \"Service Unavailable\"\n    , \"details\": \"Planned Maintenance\"\
    \n  }\n}\n```\n\nWe will also aim to provide information within the header fields\
    \ of when the maintenance period is due to be completed.\n<table>\n    <thead>\n\
    \        <tr>\n            <th>Header</th>\n            <th>Description</th>\n\
    \        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td style=\"\
    white-space:nowrap;\">Retry-After</td>\n            <td>Indicates how long the\
    \ service is expected to be unavailable, as either a HTTP-date or a number of\
    \ seconds to delay after the response is received.</td>\n        </tr>\n    </tbody>\n\
    </table>\n\n\n\n# Limits\n\nTo keep AroFlo performing efficiently and effectively\
    \ we implement various limiting factors to all API requests. This is to ensure\
    \ that all requests to our API will respond in a timely manor, whilst ensuring\
    \ our main applications runs smoothly for your business needs.\n\nWe encourage\
    \ all our API users to stay within these limits, if you require help, assistance\
    \ or advise on using the API please contact AroFlo Support.\n\n## Size Limits\n\
    \n> THIS AREA IS PENDING DOCUMENTATION\n\n## Timeout Limits\n\nThe AroFlo API\
    \ gateway imposes a time limit of 30 seconds on all requests. Once this timeout\
    \ is reached, the system will respond with a status of [504 Gateway Timeout](https://httpstatuses.com/504).\n\
    \n## Rate Limits\n\nThe AroFlo API imposes several rate limiting factors on requests\
    \ to protect the system against threats such as [Denial-of-Service (DoS) attacks](https://en.wikipedia.org/wiki/Denial-of-service_attack).\n\
    \nAlthough the API defines the maximum limitations, it is also possible for AroFlo\
    \ accounts to impose their own limits on either users or individual API tokens.\n\
    \nOnce the rate limit is reached, the system will respond with a status of [429\
    \ Too Many Requests](https://httpstatuses.com/429) and the following payload:\n\
    \n\n```json\n{\n  \"entropy\": \"some-random-value\"\n  , \"error\" : {\n    \"\
    code\": 429\n    , \"type\": \"too-many-requests\"\n    , \"message\": \"Too Many\
    \ Requests\"\n  }\n}\n```\n\n\n### Per Day Limit\n\nThe API has a limit of 5000\
    \ requests per user during any rolling 24 hour period. The available limits are\
    \ provided within the response header parameters.\n<table>\n    <thead>\n    \
    \    <tr>\n            <th>Header</th>\n            <th>Description</th>\n   \
    \     </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>X-RateLimit-Daily-UserRemaining</td>\n\
    \            <td>The available number of requests the user is capable of making.</td>\n\
    \        </tr>\n        <tr>\n            <td>X-RateLimit-Daily-UserLimit</td>\n\
    \            <td>The daily rate limit that is applied to the user.</td>\n    \
    \    </tr>\n        <tr>\n            <td>X-RateLimit-Daily-TokenRemaining</td>\n\
    \            <td>The available number of requests the API token is capable of\
    \ making.</td>\n        </tr>\n        <tr>\n            <td>X-RateLimit-Daily-TokenLimit</td>\n\
    \            <td>The daily rate limit that has been applied to the API token.</td>\n\
    \        </tr>\n    </tbody>\n</table>\n\n\n### Per Minute Limit\n\nThe API imposes\
    \ a limit of 100 requests per user during any 60 second period, resetting at the\
    \ start of each minute. The available limits are provided within the response\
    \ header parameters.\n<table>\n    <thead>\n        <tr>\n            <th>Header</th>\n\
    \            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n\
    \        <tr>\n            <td>X-RateLimit-UserRemaining</td>\n            <td>The\
    \ available number of requests the user is capable of making.</td>\n        </tr>\n\
    \        <tr>\n            <td>X-RateLimit-UserLimit</td>\n            <td>The\
    \ rate limit that is applied to the user.</td>\n        </tr>\n        <tr>\n\
    \            <td>X-RateLimit-TokenRemaining</td>\n            <td>The available\
    \ number of requests the API token is capable of making.</td>\n        </tr>\n\
    \        <tr>\n            <td>X-RateLimit-TokenLimit</td>\n            <td>The\
    \ rate limit that has been applied to the API token.</td>\n        </tr>\n   \
    \ </tbody>\n</table>\n\n\n# Client Libraries\n\nAt AroFlo we have created the\
    \ following libraries which can be used to assist you when working with our API.\n\
    \n- **Node.js:** \n  - GitHub: https://github.com/AroFlo/aroflo-node\n  - NPM:\
    \ https://www.npmjs.com/package/aroflo-node\n"
  termsOfService: https://aroflo.com/api-terms-of-use/
  contact:
    name: AroFlo Support
    url: https://aroflo.com/support
    email: support@aroflo.com
  license:
    name: MIT License
    url: /license
  version: 2021.7.31
  x-logo:
    url: https://office.aroflo.com/imsFrontend/img/api-logo.png
    backgroundColor: '#EDE813'
    altText: AroFlo
tags:
- name: Asset Types
  description: |
    Asset Types let you specify which custom fields should appear on which asset cards.
- name: Compliance Alerts
  description: Compliance Alerts act as a general reminder for important compliance
    events.
- name: Credit Notes
  description: |-
    Credit notes are used to reduce the amount your client owes you, or that you owe a supplier, and to adjust stock holder levels for returned inventory items.

    Credit notes may be created against a specific invoice or purchase order, or against the client or supplier for allocation to future invoices or purchase orders. Refunds may be recorded as a payment against the credit note.
- name: GraphQL
  description: "We also offer a GraphQL alternative to the Rest API. You can explore\
    \ the GraphQL Schema with [GraphQL Voyager](/graphql) in your browser.\r\n\r\n\
    You can also learn more about using GraphQL by visiting [graphql.org](https://www.graphql.org/)."
- name: Locations
  description: "Locations are used when the work site location is different to the\
    \ client's office location. For example, you may have a contract to maintain multiple\
    \ properties for a real estate agent or strata management company."
- name: Project Retentions
  description: Project Retention Schemes are used to set what portion of a project's
    value is retained by a client as warranty against liability for defects and how
    it is to be claimed at the end of the liability period.
- name: Transaction Terms
  description: "Transaction terms autopopulate the Due Date displayed on invoices\
    \ (for Clients), and for Purchase Orders and Bills (for Suppliers)."
- name: Work Orders
  description: "Work orders are used to order labour from a contractor, they provide\
    \ details and instructions on the works that are required. "
paths:
  /version:
    get:
      tags:
      - Service Information
      summary: API Version
      description: Obtains the current version details of the API.
      operationId: apiVersion#get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersionSchema'
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst response = await aroflo.apiVersion.get();\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/version'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /accounting/creditnotes:
    get:
      tags:
      - Credit Notes
      summary: List Credit Notes
      description: Collection of Credit Note Details.
      operationId: accounting.creditNotes#list
      parameters:
      - name: belongs_to
        in: query
        description: Identifier of the business unit to retrieve credit notes from.
        schema:
          type: string
        example: XD000001
      - name: include_children
        in: query
        description: Flag indicating if Credit Notes that belong to a child of the
          `belongs_to` business unit should be included in the search results. This
          field is ignored if no `belongs_to` value is provided.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: applied_to
        in: query
        description: Identifier of the organization of which credit notes have been
          applied to.
        schema:
          type: string
        example: XD000001
      - name: type
        in: query
        description: Comma separated list of Credit Note types to search for. If not
          provided then a search for all types that the user has permission to list
          will be performed.
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - PURCHASE_ORDER
            - INVOICE
            - BILL
            - SUPPLIER
            - CLIENT
        example: "INVOICE,BILL"
      - name: status
        in: query
        description: Comma separated list of statuses to search for. If not provided
          then a search for all statues will be performed.
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - IN_PROGRESS
            - PENDING_APPROVAL
            - APPROVED
            - PROCESSED
        example: "IN_PROGRESS,PENDING_APPROVAL"
      - name: credit_note_number
        in: query
        description: Filters notes by their credit note number. The following query
          modifiers may be applied to alter the matching pattern.<ul><li>`credit_note_number.like`
          will return results that contain the given value within the name.</li><li>`credit_note_number.begins_with`
          will return results that begin with the provided value.</li><li>`credit_note_number.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 20
          minLength: 1
          type: string
        example: 12
      - name: reference
        in: query
        description: Filters notes by their reference. The following query modifiers
          may be applied to alter the matching pattern.<ul><li>`reference.like` will
          return results that contain the given value within the name.</li><li>`reference.begins_with`
          will return results that begin with the provided value.</li><li>`reference.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 100
          minLength: 1
          type: string
        example: abc-1
      - name: created.since
        in: query
        description: UTC Timestamp of the date which Credit Notes must have been created
          on or after.
        schema:
          type: string
          format: YYYY-MM-DDTHH:mm:ssZ
        example: 2020-01-01T09:00:00Z
      - name: created.until
        in: query
        description: UTC Timestamp of the date which Credit Notes must have been created
          on or before.
        schema:
          type: string
          format: YYYY-MM-DDTHH:mm:ssZ
        example: 2020-12-31T09:00:00Z
      - name: processed.since
        in: query
        description: UTC Timestamp of the date which Credit Notes must have been processed
          on or after.
        schema:
          type: string
          format: YYYY-MM-DDTHH:mm:ssZ
        example: 2020-01-01T09:00:00Z
      - name: processed.until
        in: query
        description: UTC Timestamp of the date which Credit Notes must have been processed
          on or before.
        schema:
          type: string
          format: YYYY-MM-DDTHH:mm:ssZ
        example: 2020-12-31T09:00:00Z
      - name: page
        in: query
        description: Page Number
        schema:
          minimum: 1
          type: number
          default: 1
        example: 1
      - name: limit
        in: query
        description: Number of results per page.
        schema:
          maximum: 30
          minimum: 1
          type: number
          default: 30
        example: 30
      - name: sort
        in: query
        description: Data to sort the results on.
        schema:
          type: string
          default: CREDIT_NOTE_NUMBER
          enum:
          - APPLIED_TO_ORGANIZATION_NAME
          - APPLIED_TO_ORGANIZATION_TYPE
          - BELONGS_TO_ORGANIZATION_NAME
          - REFERENCE
          - CREDIT_NOTE_NUMBER
          - STATUS
          - DATE_ISSUED
          - DATE_PROCESSED
          - TOTAL_EX_TAX_AMOUNT
          - TOTAL_TAX_AMOUNT
          - TOTAL_AMOUNT
          - TOTAL_ALLOCATED_AMOUNT
          - TOTAL_PAID_AMOUNT
          - TOTAL_BALANCE_REMAINING
        example: CREDIT_NOTE_NUMBER
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNotes'
      security:
      - HMAC:
        - legacy-access-type:manager
        - legacy-access-type:admin
        - legacy-account-manager-type:account-manager
        - legacy-account-manager-type:compliance-and-account-manager
        - legacy-account-manager-type:compliance-and-account-manager-without-reports
      - HMAC:
        - credit-note:invoice:list
        - credit-note:purchase-order:list
        - credit-note:client:list
        - credit-note:supplier:list
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tbelongs_to:\
          \ \"XD00001\"\n\t, include_children: true\n\t, applied_to: \"XD00001\"\n\
          \t, type: [\"INVOICE\", \"BILL\"]\n\t, status: [\"IN_PROGRESS\", \"PENDING_APPROVAL\"\
          ]\n\t, credit_note_number: \"1234\"\n\t, reference: \"abc-1\"\n\t, created:\
          \ {\n\t\tsince: \"2021-01-01\"\n\t\t, until: \"2021-02-28\"\n\t}\n\t, processed:\
          \ {\n\t\tsince: \"2021-01-01\"\n\t\t, until: \"2021-02-28\"\n\t}\n\t, page:\
          \ 1\n\t, limit: 30\n\t, sort: \"CREDIT_NOTE_NUMBER\"\n\t, order: \"ASCENDING\"\
          \n};\nconst response = await aroflo.accounting\n\t\t.creditNotes\n\t\t.list(creditNoteId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/accounting/creditnotes?applied_to=XD00001&belongs_to=XD00001&created.since=2021-01-01&created.until=2021-02-28&processed.since=2021-01-01&processed.until=2021-02-28&credit_note_number=1234&include_children=TRUE&limit=30&order=ASCENDING&page=1&reference=abc-1&sort=CREDIT_NOTE_NUMBER&status=IN_PROGRESS,PENDING_APPROVAL&type=INVOICE,BILL'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /accounting/creditnotes/{creditnote}:
    get:
      tags:
      - Credit Notes
      summary: Describe Credit Note
      description: Credit Note Details.
      operationId: accounting.creditNotes#get
      parameters:
      - name: creditnote
        in: path
        description: Identifier of the credit note being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
      security:
      - HMAC:
        - legacy-access-type:manager
        - legacy-access-type:admin
        - legacy-account-manager-type:account-manager
        - legacy-account-manager-type:compliance-and-account-manager
        - legacy-account-manager-type:compliance-and-account-manager-without-reports
      - HMAC:
        - credit-notes:type:invoice:view
      - HMAC:
        - credit-notes:type:purchase-order:view
      - HMAC:
        - credit-notes:type:client:view
      - HMAC:
        - credit-notes:type:supplier:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst creditNoteId = \"\
          XD000001\";\nconst response = await aroflo.accounting\n\t\t.creditNotes\n\
          \t\t.get(creditNoteId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/accounting/creditnotes/${CREDIT_NOTE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /accounting/creditnotes/{creditnote}/allocations:
    get:
      tags:
      - Credit Note Allocations
      summary: List Allocations
      description: Provides a summarized list of allocations for a specified credit
        note.
      operationId: accounting.creditNotes.allocations#list
      parameters:
      - name: creditnote
        in: path
        description: Identifier of the credit note of which the allocations are being
          retrieved from.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNoteAllocations'
      security:
      - HMAC:
        - legacy-access-type:manager
        - legacy-access-type:admin
        - legacy-account-manager-type:account-manager
        - legacy-account-manager-type:compliance-and-account-manager
        - legacy-account-manager-type:compliance-and-account-manager-without-reports
      - HMAC:
        - credit-note:invoice:view
        - credit-note:purchase-order:view
        - credit-note:client:view
        - credit-note:supplier:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst creditNoteId = \"\
          XD000001\";\nconst response = await aroflo.accounting\n\t\t.creditNotes\n\
          \t\t.allocations\n\t\t.list(creditNoteId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/accounting/creditnotes/${CREDIT_NOTE_ID}/allocations'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /accounting/creditnotes/{creditnote}/lineitems:
    get:
      tags:
      - Credit Note Line Items
      summary: List Line Items
      description: Provides a summarized list of line items for a specified credit
        note.
      operationId: accounting.creditNotes.lineItems#list
      parameters:
      - name: creditnote
        in: path
        description: Identifier of the credit note of which the line items are being
          retrieved from.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNoteLineItems'
      security:
      - HMAC:
        - legacy-access-type:manager
        - legacy-access-type:admin
        - legacy-account-manager-type:account-manager
        - legacy-account-manager-type:compliance-and-account-manager
        - legacy-account-manager-type:compliance-and-account-manager-without-reports
      - HMAC:
        - credit-note:invoice:view
        - credit-note:purchase-order:view
        - credit-note:client:view
        - credit-note:supplier:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst creditNoteId = \"\
          XD000001\";\nconst response = await aroflo.accounting\n\t\t.creditNotes\n\
          \t\t.lineItems\n\t\t.list(creditNoteId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/accounting/creditnotes/${CREDIT_NOTE_ID}/lineitems'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /accounting/creditnotes/{creditnote}/notes:
    get:
      tags:
      - Credit Note Notes
      summary: List Notes
      description: Provides a summarized list of notes for a specified credit note.
      operationId: accounting.creditNotes.notes#list
      parameters:
      - name: creditnote
        in: path
        description: Identifier of the credit note of which the notes are being retrieved
          from.
        required: true
        schema:
          type: string
        example: XD00000D7
      - name: sticky
        in: query
        description: Optional flag indicating if whether only sticky or non-sticky
          notes are returned. Not providing this value will ensure both sticky and
          non-sticky notes get returned.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: "TRUE"
      - name: page
        in: query
        description: Page Number
        schema:
          minimum: 1
          type: number
          default: 1
        example: 1
      - name: limit
        in: query
        description: Number of results per page.
        schema:
          maximum: 30
          minimum: 1
          type: number
          default: 30
        example: 30
      - name: sort
        in: query
        description: Data to sort the results on.
        schema:
          type: string
          default: DATE_CREATED
          enum:
          - DATE_CREATED
        example: DATE_CREATED
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNoteNotes'
      security:
      - HMAC:
        - legacy-access-type:manager
        - legacy-access-type:admin
        - legacy-account-manager-type:account-manager
        - legacy-account-manager-type:compliance-and-account-manager
        - legacy-account-manager-type:compliance-and-account-manager-without-reports
      - HMAC:
        - credit-note:invoice:view
        - credit-note:purchase-order:view
        - credit-note:client:view
        - credit-note:supplier:view
        - credit-note:field:notes:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst creditNoteId = \"\
          XD000001\";\nconst query = {\n\tsticky: true\n\t, page: 1\n\t, limit: 30\n\
          \t, sort: \"DATE_CREATED\"\n\t, order: \"ASCENDING\"\n};\nconst response\
          \ = await aroflo.accounting\n\t\t.creditNotes\n\t\t.notes\n\t\t.list(creditNoteId,\
          \ query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/accounting/creditnotes/${CREDIT_NOTE_ID}/notes?limit=30&order=ASCENDING&page=1&sort=DATE_CREATED&sticky=TRUE'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /accounting/creditnotes/{creditnote}/payments:
    get:
      tags:
      - Credit Note Payments
      summary: List Payments
      description: Provides a summarized list of payments for a specified credit note.
      operationId: accounting.creditNotes.payments#list
      parameters:
      - name: creditnote
        in: path
        description: Identifier of the credit note of which the payments are being
          retrieved from.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNotePayments'
      security:
      - HMAC:
        - legacy-access-type:manager
        - legacy-access-type:admin
        - legacy-account-manager-type:account-manager
        - legacy-account-manager-type:compliance-and-account-manager
        - legacy-account-manager-type:compliance-and-account-manager-without-reports
      - HMAC:
        - credit-note:invoice:view
        - credit-note:purchase-order:view
        - credit-note:client:view
        - credit-note:supplier:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst creditNoteId = \"\
          XD000001\";\nconst response = await aroflo.accounting\n\t\t.creditNotes\n\
          \t\t.payments\n\t\t.list(creditNoteId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/accounting/creditnotes/${CREDIT_NOTE_ID}/payments'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /accounting/transactionterms/{transactionterms}:
    get:
      tags:
      - Transaction Terms
      summary: Retrieve TransactionTerms
      description: Retrieves the specified TransactionTerms.
      operationId: transactionTerms#get
      parameters:
      - name: transactionterms
        in: path
        description: Identifier of the TransactionTerms being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionTerm'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst transactionTermsId\
          \ = \"XD000001\";\nconst response = await aroflo.accounting.transactionTerms\n\
          \t\t.get(transactionTermsId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/accounting/transactionterms/${TRANSACTION_TERMS_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /accounting/transactionterms:
    get:
      tags:
      - Transaction Terms
      summary: List Transaction Terms
      description: Returns details about a collection of Transaction Terms.
      operationId: transactionTerms#list
      parameters:
      - name: archived
        in: query
        description: Flag indicating whether archived or non-archived Types should
          be returned.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: page
        in: query
        description: Page Number
        schema:
          minimum: 1
          type: number
          default: 1
        example: 1
      - name: limit
        in: query
        description: Number of results per page.
        schema:
          minimum: 1
          type: number
          default: 30
      - name: sort
        in: query
        description: Data to sort the results on.
        schema:
          type: string
          enum:
          - ID
        example: ID
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionTerms'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tarchived:\
          \ false\n\t, sort: \"ID\"\n\t, order: \"ASCENDING\"\n};\nconst response\
          \ = await aroflo.accounting\n\t\t.transactionterms\n\t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/accounting/transactionterms?archived=FALSE&order=ASCENDING&sort=ID'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /accounting/workorders/{workorder}:
    get:
      tags:
      - Work Orders
      summary: Retrieves a single Work Order.
      description: Work Order Details.
      operationId: accounting.workOrders#get
      parameters:
      - name: workorder
        in: path
        description: Identifier of the work order being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrder'
      security:
      - HMAC:
        - legacy-access-type:manager
        - legacy-access-type:admin
        - legacy-account-manager-type:account-manager
        - legacy-account-manager-type:compliance-and-account-manager
        - legacy-account-manager-type:compliance-and-account-manager-without-reports
      - HMAC:
        - work-order:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst workOrderId = \"XD000001\"\
          ;\nconst response = await aroflo.accounting\n\t\t.workOrders\n\t\t.get(workOrderId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/accounting/workorders/${WORK_ORDER_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /assets/categories:
    get:
      tags:
      - Asset Categories
      summary: List Asset categories
      description: Returns details about a collection of Custom Holders.
      operationId: assets.categories#list
      parameters:
      - name: name
        in: query
        description: Filters Asset Categories by their name. The following query modifiers
          may be applied to alter the matching pattern.<ul><li>`name.like` will return
          results that contain the given value within the name.</li><li>`name.begins_with`
          will return results that begin with the provided value.</li><li>`name.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 50
          type: string
        example: electrical
      - name: parent_name
        in: query
        description: Filters Asset Categories by their parent name. The following
          query modifiers may be applied to alter the matching pattern.<ul><li>`name.like`
          will return results that contain the given value within the name.</li><li>`name.begins_with`
          will return results that begin with the provided value.</li><li>`name.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 50
          type: string
        example: electrical
      - name: parent
        in: query
        description: Comma separated list of parent category Identifiers that asset
          categories must belong to. Passing an empty value will return all bottom
          level categories.
        schema:
          type: string
        example: "XD000001,XD000002"
      - name: page
        in: query
        description: Page Number
        schema:
          minimum: 1
          type: number
          default: 1
        example: 1
      - name: limit
        in: query
        description: Number of results per page.
        schema:
          minimum: 1
          type: number
          default: 30
      - name: sort
        in: query
        description: Data to sort the results on.
        schema:
          type: string
          enum:
          - NAME
          - PARENT_NAME
        example: NAME
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomHolders'
      security:
      - HMAC:
        - legacy-access-type:admin
        - legacy-access-type:manager
        - legacy-access-type:base
      - HMAC:
        - asset:list
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\t name:\
          \ {\n\t\tlike: \"electrical\"\n\t}\n\t, sort: \"NAME\"\n\t, order: \"ASCENDING\"\
          \n};\nconst response = await aroflo.assets\n\t\t.categories\n\t\t.list(query);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/assets/categories?name.like=electrical&order=ASCENDING&sort=NAME'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

    post:
      tags:
      - Asset Categories
      summary: Create Asset Category
      description: Creates the specified Asset Category.
      operationId: assets.categories#create
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AssetCategoryCreationInput'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryExtendedSchema'
      security:
      - HMAC:
        - legacy-access-type:manager
        - legacy-access-type:admin
      - HMAC:
        - asset:list
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst payload = {\n\tname:\
          \ \"Example Name\"\n};\nconst response = await aroflo.assets\n\t\t.categories\n\
          \t\t.create(payload);\n\n"
      - lang: shell
        label: cURL
        source: "curl --location --request POST '/assets/categories'\n--header 'Authorization:\
          \ HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'\n--header 'Date:  $(date\
          \ --rfc-email)'\n--header 'Accept: application/json'\n--header 'Content-Type:\
          \ application/json'\n--data-raw '{\n\t\"name\": \"Example Name\",\n}'\n\n"
  /assets/categories/{assetcategory}:
    get:
      tags:
      - Asset Categories
      summary: Retrieve Asset Category
      description: Retrieves the specified AssetCategory.
      operationId: assets.categories#get
      parameters:
      - name: assetcategory
        in: path
        description: Identifier of the Asset Category being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetCategory'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst assetCategoryId =\
          \ \"XD000001\";\nconst response = await aroflo.assets\n\t\t.categories\n\
          \t\t.get(assetCategoryId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/assets/categories/${ASSET_CATEGORY_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /assets/types:
    get:
      tags:
      - Asset Types
      summary: List Asset Types
      description: Returns details about a collection of Asset Types.
      operationId: assets.types#list
      parameters:
      - name: archived
        in: query
        description: Flag indicating whether archived or non-archived Types should
          be returned.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: name
        in: query
        description: Filters asset types by their name. The following query modifiers
          may be applied to alter the matching pattern.<ul><li>`name.like` will return
          results that contain the given value within the name.</li><li>`name.begins_with`
          will return results that begin with the provided value.</li><li>`name.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 50
          minLength: 1
          type: string
        example: electrical
      - name: sort
        in: query
        description: Data to sort the results on.
        schema:
          type: string
          default: LIST_ORDER
          enum:
          - NAME
          - LIST_ORDER
        example: NAME
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTypes'
      security:
      - HMAC:
        - legacy-access-type:admin
        - legacy-access-type:manager
        - legacy-access-type:base
      - HMAC:
        - asset-types:list
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tarchived:\
          \ false\n\t, name: {\n\t\tlike: \"electrical\"\n\t}\n\t, sort: \"NAME\"\n\
          \t, order: \"ASCENDING\"\n};\nconst response = await aroflo.assets\n\t\t\
          .types\n\t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/assets/types?archived=FALSE&name.like=electrical&order=ASCENDING&sort=NAME'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

    post:
      tags:
      - Asset Types
      summary: Create Asset Type
      description: Creates the specified Asset Type.
      operationId: assets.types#create
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AssetTypeCreationInput'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetType'
      security:
      - HMAC:
        - legacy-access-type:admin
        - site-administration
      - HMAC:
        - asset-types:create
        - site-administration
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst payload = {\n\tname:\
          \ \"Example Name\"\n\t, description: \"Example Description\"\n\t, listOrder:\
          \ 0\n\t, archived: false\n};\nconst response = await aroflo.assets\n\t\t\
          .types\n\t\t.create(payload);\n\n"
      - lang: shell
        label: cURL
        source: "curl --location --request POST '/assets/types'\n--header 'Authorization:\
          \ HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'\n--header 'Date:  $(date\
          \ --rfc-email)'\n--header 'Accept: application/json'\n--header 'Content-Type:\
          \ application/json'\n--data-raw '{\n\t\"name\": \"Example Name\",\n\t\"\
          description\": \"Example Description\",\n\t\"listOrder\": 0,\n\t\"archived\"\
          : false\n}'\n\n"
  /assets/types/{assetType}:
    get:
      tags:
      - Asset Types
      summary: Retrieve Asset Type
      description: Retrieves the specified Asset Type.
      operationId: assets.types#get
      parameters:
      - name: assetType
        in: path
        description: Identifier of the Asset Type being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetType'
      security:
      - HMAC:
        - legacy-access-type:admin
        - legacy-access-type:manager
        - legacy-access-type:base
      - HMAC:
        - asset-types:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst assetTypeId = \"XD000001\"\
          ;\nconst response = await aroflo.assets\n\t\t.types\n\t\t.get(assetTypeId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/assets/types/${ASSET_TYPE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

    patch:
      tags:
      - Asset Types
      summary: Mutate Asset Type
      description: Mutates the specified Asset Type.
      operationId: assets.types#mutate
      parameters:
      - name: assetType
        in: path
        description: Identifier of the Asset Type being mutated.
        required: true
        schema:
          type: string
        example: XD00000D7
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AssetTypeMutationInput'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetType'
      security:
      - HMAC:
        - legacy-access-type:admin
        - site-administration
      - HMAC:
        - asset-types:edit
        - site-administration
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst assetTypeId = \"XD000001\"\
          ;\nconst payload = {\n\tname: \"Updated Name\"\n\t, description: \"Updated\
          \ Description\"\n\t, listOrder: 1\n\t, archived: true\n};\nconst response\
          \ = await aroflo.assets\n\t\t.types\n\t\t.mutate(assetTypeId, payload);\n\
          \n"
      - lang: shell
        label: cURL
        source: "curl --location --request PATCH '/assets/types/${ASSET_TYPE_ID}'\n\
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'\n\
          --header 'Date:  $(date --rfc-email)'\n--header 'Accept: application/json'\n\
          --header 'Content-Type: application/json'\n--data-raw '{\n\t\"name\": \"\
          Updated Name\",\n\t\"description\": \"Updated Description\",\n\t\"listOrder\"\
          : 1,\n\t\"archived\": true\n}'\n\n"
  /businessunits/{businessunit}/hoursofwork:
    get:
      tags:
      - Business Unit Hours of Work
      summary: Retrieve Business Unit Hours of Work Week
      description: "Retrieves the specified Business Unit's Hours of Work Week. If\
        \ a day returns <code>null</code>, the day is set to <strong>inherit</strong>."
      operationId: businessUnits.hoursOfWorkWeek#get
      parameters:
      - name: businessunit
        in: path
        description: Identifier of the business unit to retrieve hours of work for.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HoursOfWorkWeek'
      security:
      - HMAC:
        - business-units:view
        - hours-of-work:view
      - HMAC:
        - legacy-access-type:admin
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst businessUnitId = \"\
          XD000001\";\nconst response = await aroflo.businessUnits.hoursOfWorkWeek\n\
          \t\t.get(businessUnitId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/businessunits/${BUSINESS_UNIT_ID}/hoursofwork'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /businessunits/{businessunit}/priorities:
    post:
      tags:
      - Business Unit Priorities
      summary: Create Priority
      description: Creates the specified Priority.
      operationId: businessUnits.priorities#create
      parameters:
      - name: businessunit
        in: path
        description: Identifier of the business unit being mutated.
        required: true
        schema:
          type: string
        example: XD00000D7
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PriorityCreationInput'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Priority'
      security:
      - HMAC:
        - legacy-access-type:admin
        - site-administration
        - user-type:employee
      - HMAC:
        - priorities:create
        - site-administration
        - user-type:employee
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst businessUnitId = \"\
          XD00000D7\";\nconst payload = {\n\t, shortDescription: \"Urgent\"\n\t, description:\
          \ \"Urgent Turnaround\"\n\t, priorityNumber: 1\n\t, responseValue: 15\n\t\
          , responseType: \"MINUTES\"\n\t, backgroundColor: \"#FF0000\"\n\t, listOrder:\
          \ 0\n\t, archived: false\n};\nconst response = await aroflo.businessunits\n\
          \t\t.priorities\n\t\t.create(businessUnitId, payload);\n\n"
      - lang: shell
        label: cURL
        source: "curl --location --request POST '/businessunits/XD00000D7/priorities'\n\
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'\n\
          --header 'Date:  $(date --rfc-email)'\n--header 'Accept: application/json'\n\
          --header 'Content-Type: application/json'\n--data-raw '{\n\t\"shortDescription\"\
          : \"Urgent\",\n\t\"description\": \"Urgent Turnaround\",\n\t\"priorityNumber\"\
          : 1,\n\t\"responseValue\": 15,\n\t\"responseType\": \"MINUTES\",\n\t\"backgroundColor\"\
          : \"#FF0000\",\n\t\"listOrder\": 0,\n\t\"archived\": false\n}'\n\n"
  /businessunits/{businessunit}/priorities/{priority}:
    patch:
      tags:
      - Business Unit Priorities
      summary: Mutate Priority
      description: Mutates the specified Priority.
      operationId: businessUnits.priorities#mutate
      parameters:
      - name: businessunit
        in: path
        description: Identifier of the business unit being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      - name: priority
        in: path
        description: Identifier of the priority being mutated.
        required: true
        schema:
          type: string
        example: XD00000D7
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PriorityMutationInput'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Priority'
      security:
      - HMAC:
        - legacy-access-type:admin
        - site-administration
        - user-type:employee
      - HMAC:
        - priorities:edit
        - site-administration
        - user-type:employee
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst priorityId = \"XD000001\"\
          ;\nconst businessUnitId = \"XD00000D7\";\nconst payload = {\n\t, shortDescription:\
          \ \"Urgent\"\n\t, description: \"Urgent Turnaround\"\n\t, priorityNumber:\
          \ 1\n\t, responseValue: 15\n\t, responseType: \"MINUTES\"\n\t, backgroundColor:\
          \ \"#FF0000\"\n\t, listOrder: 0\n\t, archived: false\n};\nconst response\
          \ = await aroflo.businessunits\n\t\t.priorities\n\t\t.mutate(businessUnitId,\
          \ priorityId, payload);\n\n"
      - lang: shell
        label: cURL
        source: "curl --location --request PATCH '/businessunits/${BUSINESS_UNIT_ID}/priorities/${PRIORITY_ID}'\n\
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'\n\
          --header 'Date:  $(date --rfc-email)'\n--header 'Accept: application/json'\n\
          --header 'Content-Type: application/json'\n--data-raw '{\n\t\"shortDescription\"\
          : \"Urgent\",\n\t\"description\": \"Urgent Turnaround\",\n\t\"priorityNumber\"\
          : 1,\n\t\"responseValue\": 15,\n\t\"responseType\": \"MINUTES\",\n\t\"backgroundColor\"\
          : \"#FF0000\",\n\t\"listOrder\": 0,\n\t\"archived\": false\n}'\n\n"
  /compliance/alerts/{alert}:
    get:
      tags:
      - Compliance Alerts
      summary: Describe Compliance Alert
      description: Retrieves the specified Compliance Alert.
      operationId: compliance.alerts#get
      parameters:
      - name: complianceAlert
        in: path
        description: Identifier of the compliance alert being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceAlert'
      security:
      - HMAC:
        - legacy-access-type:base
      - HMAC:
        - legacy-access-type:manager
      - HMAC:
        - legacy-access-type:admin
      - HMAC:
        - compliance-alerts:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst complianceAlertId\
          \ = \"XD000001\";\nconst response = await aroflo.compliance\n\t\t.alerts\n\
          \t\t.get(complianceAlertId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/compliance/alerts/${COMPLIANCE_ALERT_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /compliance/alerts:
    get:
      tags:
      - Compliance Alerts
      summary: List Compliance Alerts
      description: Retrieves a paginated collection Compliance Alerts.
      operationId: compliance.alerts#list
      parameters:
      - name: belongs_to
        in: query
        description: "Identifier of the business unit to retrieve compliance alerts\
          \ from.<p>If the provided identifier is that of the Top Level Business Unit,\
          \ then all compliance alerts within the site are returned.</p>"
        schema:
          type: string
        example: XD000001
      - name: status
        in: query
        description: Comma separated list of statuses to search for. If not provided
          then a search for all statues will be performed.
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - OPEN
            - CLOSED
        example: "OPEN,CLOSED"
      - name: name
        in: query
        description: Filters compliance alerts by their name. The following query
          modifiers may be applied to alter the matching pattern.<ul><li>`name.like`
          will return results that contain the given value within the name.</li><li>`name.begins_with`
          will return results that begin with the provided value.</li><li>`name.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 50
          minLength: 1
          type: string
        example: electrical
      - name: reference_number
        in: query
        description: Filters compliance alerts by their reference number field. The
          following query modifiers may be applied to alter the matching pattern.<ul><li>`reference_number.like`
          will return results that contain the given value within the reference number
          field.</li><li>`reference_number.begins_with` will return results that begin
          with the provided value.</li><li>`reference_number.equals` will return results
          where the reference number completely matches the provided value.</li></ul>
        schema:
          minimum: 1
          type: number
        example: 10
      - name: created.since
        in: query
        description: Returns all compliance alerts that were created on or after this
          date.
        schema:
          type: string
          format: YYYY-MM-DDTHH:mm:ss
        example: 2020-01-01T09:30:00.000Z
      - name: created.until
        in: query
        description: Returns all compliance alerts that were created on or before
          this date.
        schema:
          type: string
          format: YYYY-MM-DDTHH:mm:ss
        example: 2020-01-01T09:30:00.000Z
      - name: expired.since
        in: query
        description: Returns all compliance alerts that expire on or after this date.
        schema:
          type: string
          format: YYYY-MM-DD
        example: 2020-01-01
      - name: expired.until
        in: query
        description: Returns all compliance alerts that expire on or before this date.
        schema:
          type: string
          format: YYYY-MM-DD
        example: 2020-12-31
      - name: page
        in: query
        description: Page Number
        schema:
          minimum: 1
          type: number
          default: 1
        example: 1
      - name: limit
        in: query
        description: Number of results per page.
        schema:
          maximum: 30
          minimum: 1
          type: number
          default: 30
        example: 30
      - name: sort
        in: query
        description: Data to sort the results on.<p>Contact and Manager names are
          first sorted by Surname and then further sorted by Given name.
        schema:
          type: string
          default: NAME
          enum:
          - NAME
          - CREATED_DATE
          - EXPIRY_DATE
          - STATUS
          - DESCRIPTION
          - PRODUCT
          - REFERENCE_NUMBER
          - BUSINESS_UNIT_NAME
        example: NAME
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceAlerts'
      security:
      - HMAC:
        - legacy-access-type:base
      - HMAC:
        - legacy-access-type:manager
      - HMAC:
        - legacy-access-type:admin
      - HMAC:
        - compliance-alerts:list
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tbelongs_to:\
          \ \"XD000001\"\n\t, status: [\"OPEN\", \"CLOSED\"]\n\t, name: {\n\t\tlike:\
          \ \"electrical\"\n\t}\n\t, reference_number: {\n\t\tlike: \"1234\"\n\t}\n\
          \t, created: {\n\t\tsince: \"2021-01-01\"\n\t\t, until: \"2021-02-28\"\n\
          \t}\n\t, expired: {\n\t\tsince: \"2021-01-01\"\n\t\t, until: \"2021-02-28\"\
          \n\t}\n\t, page: 1\n\t, limit: 30\n\t, sort: \"NAME\"\n\t, order: \"ASCENDING\"\
          \n};\nconst response = await aroflo.compliance\n\t\t.alerts\n\t\t.list(query);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/compliance/alerts/${COMPLIANCE_ALERT_ID}&belongs_to=XD000001&created.since=2021-01-01&created.until=2021-02-28&expired.since=2021-01-01&expired.until=2021-02-28&limit=30&name.like=electrical&order=ASCENDING&page=1&reference_number.like=1234&sort=DATE_CREATED&status=OPEN,CLOSED'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/expensetypes/{expensetype}:
    get:
      tags:
      - Expense Types
      summary: Retrieve an Expense Type
      description: Retrieves the specified Expense Type.
      operationId: timesheets.expenseTypes#get
      parameters:
      - name: expensetype
        in: path
        description: Identifier of the ExpenseType being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseType'
      security:
      - HMAC:
        - timesheet:expense:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst expenseTypeId = \"\
          XD000001\";\nconst response = await aroflo.timesheets\n\t\t.expenseTypes\n\
          \t\t.get(expenseTypeId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/expensetypes/${EXPENSE_TYPE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /geography/countries/{country}:
    get:
      tags:
      - Countries
      summary: Retrieve Country
      description: Retrieves the specified Country.
      operationId: geography.countries#get
      parameters:
      - name: country
        in: path
        description: Identifier of the Country being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst countryId = \"XD000001\"\
          ;\nconst response = await aroflo.geography\n\t\t.countries\n\t\t.get(countryId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/geography/countries/${COUNTRY_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /geography/countries:
    get:
      tags:
      - Countries
      summary: List Countries
      description: Returns details about a collection of Countries.
      operationId: geography.countries#list
      parameters:
      - name: name
        in: query
        description: Filters countries by their name. The following query modifiers
          may be applied to alter the matching pattern.<ul><li>`name.like` will return
          results that contain the given value within the name.</li><li>`name.begins_with`
          will return results that begin with the provided value.</li><li>`name.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 250
          minLength: 1
          type: string
        example: Australia
      - name: code
        in: query
        description: Filters countries by their code. The following query modifiers
          may be applied to alter the matching pattern.<ul><li>`code.like` will return
          results that contain the given value within the name.</li><li>`code.begins_with`
          will return results that begin with the provided value.</li><li>`code.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 3
          minLength: 1
          type: string
        example: AU
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Countries'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tname:\
          \ {\n\t\tlike: \"Australia\"\n\t}\n};\nconst response = await aroflo.geography\n\
          \t\t.countries\n\t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/geography/countries?name.like=Australia'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /geography/states/{state}:
    get:
      tags:
      - States
      summary: Retrieve State
      description: Retrieves the specified State.
      operationId: geography.states#get
      parameters:
      - name: state
        in: path
        description: Identifier of the State being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst stateId = \"XD000001\"\
          ;\nconst response = await aroflo.geography\n\t\t.states\n\t\t.get(stateId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/geography/states/${STATE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /geography/states:
    get:
      tags:
      - States
      summary: List states
      description: Returns details about a collection of states.
      operationId: geography.states#list
      parameters:
      - name: name
        in: query
        description: Filters states by their name. The following query modifiers may
          be applied to alter the matching pattern.<ul><li>`name.like` will return
          results that contain the given value within the name.</li><li>`name.begins_with`
          will return results that begin with the provided value.</li><li>`name.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 250
          minLength: 1
          type: string
        example: Australia
      - name: code
        in: query
        description: Filters states by their code. The following query modifiers may
          be applied to alter the matching pattern.<ul><li>`code.like` will return
          results that contain the given value within the name.</li><li>`code.begins_with`
          will return results that begin with the provided value.</li><li>`code.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 250
          minLength: 1
          type: string
        example: AU
      - name: country
        in: query
        description: Identifier of the country of which states belong to.
        schema:
          type: string
        example: XD000001
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/States'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tname:\
          \ {\n\t\tlike: \"Australia\"\n\t}\n\t, code: {\n\t\tlike: \"au\"\n\t}\n\t\
          , country: \"XD00001\"\n};\nconst response = await aroflo.geography\n\t\t\
          .states\n\t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/geography/states?name.like=Australia&country=XD00001'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /graphql:
    post:
      tags:
      - GraphQL
      summary: GraphQL Endpoint
      operationId: graphql#query
      requestBody:
        description: GraphQL Request Object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphQLRequest'
        required: true
      responses:
        "200":
          description: GraphQL Data
      security:
      - HMAC: []
  /inventory/customholders/{customholder}:
    get:
      tags:
      - Custom Holders
      summary: Retrieve a Custom Holder
      description: Retrieves the specified Custom Holder.
      operationId: inventory.customHolders#get
      parameters:
      - name: customholder
        in: path
        description: Identifier of the Custom Holder being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomHolder'
      security:
      - HMAC:
        - custom-holders:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst customHolderId = \"\
          XD000001\";\nconst response = await aroflo.inventory\n\t\t.customHolders\n\
          \t\t.get(customHolderId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/inventory/customholders/${CUSTOM_HOLDER_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /inventory/customholders:
    get:
      tags:
      - Custom Holders
      summary: List Custom Holders
      description: Returns details about a collection of Custom Holders.
      operationId: inventory.customHolders#list
      parameters:
      - name: archived
        in: query
        description: Flag indicating whether archived or non-archived Types should
          be returned.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: name
        in: query
        description: Filters Custom Holders by their name. The following query modifiers
          may be applied to alter the matching pattern.<ul><li>`name.like` will return
          results that contain the given value within the name.</li><li>`name.begins_with`
          will return results that begin with the provided value.</li><li>`name.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 50
          minLength: 1
          type: string
        example: electrical
      - name: page
        in: query
        description: Page Number
        schema:
          minimum: 1
          type: number
          default: 1
        example: 1
      - name: limit
        in: query
        description: Number of results per page.
        schema:
          minimum: 1
          type: number
          default: 30
      - name: sort
        in: query
        description: Data to sort the results on.
        schema:
          type: string
          enum:
          - NAME
        example: NAME
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomHolders'
      security:
      - HMAC:
        - custom-holder:list
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tarchived:\
          \ false\n\t, name: {\n\t\tlike: \"warehouse\"\n\t}\n\t, page: 1\n\t, limit:\
          \ 30\n\t, sort: \"DATE_CREATED\"\n\t, order: \"ASCENDING\"\n};\nconst response\
          \ = await aroflo.inventory\n\t\t.customHolders\n\t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/inventory/customholders?archived=FALSE&name.like=warehouse&order=ASCENDING&page=1&sort=DATE_CREATED'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /jobcontrol:
    get:
      tags:
      - Service Information
      summary: List Job Control
      description: "Shows the breakdown of tasks as shown on the [AroFlo Home Screen](https://help.aroflo.com/display/office/Home)."
      operationId: jobControl#list
      parameters:
      - name: applied_to
        in: query
        description: Identifier of the organization to retrieve job information from.
        schema:
          type: string
        example: XD000001
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobControlCollection'
      security:
      - HMAC:
        - business-units:list
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tapplied_to:\
          \ \"XD000001\"\n};\nconst response = await aroflo.jobControl\n\t\t.list(query);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/jobcontrol?applied_to=XD000001'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /locations/{location}:
    get:
      tags:
      - Locations
      summary: Retrieve Location
      description: Retrieves the specified Location.
      operationId: locations#get
      parameters:
      - name: location
        in: path
        description: Identifier of the Location being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      security:
      - HMAC:
        - legacy-access-type:base
        - legacy-access-type:manager
        - legacy-access-type:admin
      - HMAC:
        - locations:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst locationId = \"XD000001\"\
          ;\nconst response = await aroflo.locations\n\t\t.get(locationId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/locations/${LOCATION_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /locations:
    get:
      tags:
      - Locations
      summary: List Locations
      description: Retrieves a paginated collection Locations.
      operationId: locations#list
      parameters:
      - name: applied_to
        in: query
        description: Identifier of the organization of which locations have been applied
          to. This is generally the client whom the locations is for.
        schema:
          type: string
        example: XD000001
      - name: belongs_to
        in: query
        description: Identifier of the business unit to retrieve locations from.
        schema:
          type: string
        example: XD000001
      - name: archived
        in: query
        description: Flag indicating whether archived or non-archived Locations should
          be returned.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: site_contact
        in: query
        description: Filters locations by their site contacts name. The following
          query modifiers may be applied to alter the matching pattern.<ul><li>`site_contact.like`
          will return results that contain the given value within the name.</li><li>`site_contact.begins_with`
          will return results that begin with the provided value.</li><li>`site_contact.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 50
          minLength: 1
          type: string
        example: John
      - name: site_phone
        in: query
        description: Filters locations by their site contacts phone. The following
          query modifiers may be applied to alter the matching pattern.<ul><li>`site_phone.like`
          will return results that contain the given value within the phone number.</li><li>`site_phone.begins_with`
          will return results that begin with the provided value.</li><li>`site_phone.equals`
          will return results where the phone number completely matches the provided
          value.</li></ul>All conditions are case-insensitive.
        schema:
          maxLength: 50
          minLength: 1
          type: string
        example: 12345678
      - name: site_email
        in: query
        description: Filters locations by their site contacts email. The following
          query modifiers may be applied to alter the matching pattern.<ul><li>`site_email.like`
          will return results that contain the given value within the email.</li><li>`site_email.begins_with`
          will return results that begin with the provided value.</li><li>`site_email.equals`
          will return results where the email completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 100
          minLength: 1
          type: string
        example: example@example.com
      - name: applied_organisation_name
        in: query
        description: Filters locations by their applied organisations name. The following
          query modifiers may be applied to alter the matching pattern.<ul><li>`applied_organisation_name.like`
          will return results that contain the given value within the name.</li><li>`applied_organisation_name.begins_with`
          will return results that begin with the provided value.</li><li>`applied_organisation_name.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 255
          minLength: 1
          type: string
        example: electrical
      - name: sort
        in: query
        description: Data to sort the results on.
        schema:
          type: string
          default: APPLIED_TO_NAME
          enum:
          - APPLIED_TO_NAME
          - ADDRESS_LINE_ONE
          - ADDRESS_LINE_TWO
          - SUBURB
          - STATE
          - POSTCODE
          - CONTACT
        example: APPLIED_TO_NAME
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      - name: page
        in: query
        description: Page Number
        schema:
          minimum: 1
          type: number
          default: 1
        example: 1
      - name: limit
        in: query
        description: Number of results per page.
        schema:
          maximum: 30
          minimum: 1
          type: number
          default: 30
        example: 30
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations'
      security:
      - HMAC:
        - legacy-access-type:base
        - legacy-access-type:manager
        - legacy-access-type:admin
      - HMAC:
        - locations:list
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tapplied_to:\
          \ \"XD00001\"\n\t, belongs_to: \"XD00001\"\n\t, archived: false\n\t, site_contact:\
          \ {\n\t\tlike: \"fred\"\n\t}\n\t, site_phone: {\n\t\tlike: \"0400\"\n\t\
          }\n\t, site_email: {\n\t\tlike: \"fred.person@\"\n\t}\n\t, applied_organisation_name:\
          \ {\n\t\tlike: \"electrical\"\n\t}\n\t, page: 1\n\t, limit: 30\n\t, sort:\
          \ \"APPLIED_TO_NAME\"\n\t, order: \"ASCENDING\"\n};\nconst response = await\
          \ aroflo.locations\n\t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/locations?applied_organisation_name.like=electrical&applied_to=XD00001&archived=FALSE&belongs_to=XD00001&order=ASCENDING&page=1&site_contact.like=fred&site_email.like=fred.person@&site_phone.like=0400&sort=DATE_CREATED'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /locations/{location}/notes:
    post:
      tags:
      - Location Notes
      summary: Create Location Note
      description: Creates the specified Asset Category.
      operationId: locations.notes#create
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NoteCreationInput'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteExtendedSchema'
      security:
      - HMAC:
        - legacy-access-type:base
        - legacy-access-type:manager
        - legacy-access-type:admin
      - HMAC:
        - locations:notes:add
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst payload = {\n\tcontent:\
          \ \"Note Content\"\n\t,sticky: \"true\"\n\t,visibility: \"INTERNAL_ONLY\"\
          \n\t,restrictionResources: {\n\t\tusers: [\"XD00001\"]\n\t\tpermissionGroups:\
          \ [\"XD00001\"]\n\t}\n};\nconst response = await aroflo.locations\n\t\t\
          .notes\n\t\t.create(payload);\n\n"
      - lang: shell
        label: cURL
        source: "curl --location --request POST '/assets/categories'\n--header 'Authorization:\
          \ HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'\n--header 'Date:  $(date\
          \ --rfc-email)'\n--header 'Accept: application/json'\n--header 'Content-Type:\
          \ application/json'\n--data-raw '{\n\tcontent: \"Note Content\"\n\t,sticky:\
          \ \"true\"\n\t,visibility: \"INTERNAL_ONLY\"\n\t,restrictionResources: {\n\
          \t\tusers: [\"XD00001\"]\n\t\tpermissionGroups: [\"XD00001\"]\n\t}\n};\n\
          \n"
  /locations/{location}/notes/{note}:
    get:
      tags:
      - Location Notes
      summary: Retrieve Location Note
      description: Retrieves the specified Location Note.
      operationId: locations.notes#get
      parameters:
      - name: location
        in: path
        description: Identifier of the Location the note belongs to.
        required: true
        schema:
          type: string
        example: XD00000D7
      - name: note
        in: path
        description: Identifier of the note being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D8
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteExtendedSchema'
      security:
      - HMAC:
        - legacy-access-type:base
        - legacy-access-type:manager
        - legacy-access-type:admin
      - HMAC:
        - locations:view
        - locations:field:notes:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst locationId = \"XD000001\"\
          ;\nconst noteId = \"XD000002\";\nconst response = await aroflo.locations.notes\n\
          \t\t.get(locationId, noteId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/locations/${LOCATION_ID}/notes/${NOTE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /messageboard/messages/{message}:
    get:
      tags:
      - Messages
      summary: Describe Message
      description: Retrieves the specified Message from the site's Message Board.
      operationId: messageBoard.messages#get
      parameters:
      - name: message
        in: path
        description: Identifier of the message being retrieved from the message board.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBoardMessage'
      security:
      - HMAC:
        - legacy-access-type:base
        - legacy-access-type:manager
        - legacy-access-type:admin
      - HMAC:
        - message-board:view
        - users:field:surname:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst messageId = \"XD000001\"\
          ;\nconst response = await aroflo.messageBoard\n\t\t.messages\n\t\t.get(messageId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/messageboard/messages/${MESSAGE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

    delete:
      tags:
      - Messages
      summary: Delete Message
      description: Deletes the specified Message from the site's Message Board.
      operationId: messageBoard.messages#delete
      parameters:
      - name: message
        in: path
        description: Identifier of the message being deleted from the message board.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "204":
          description: Successful Response
      security:
      - HMAC:
        - message-board:delete
      - HMAC:
        - legacy-access-type:admin
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst messageId = \"XD000001\"\
          ;\nconst response = await aroflo.messageBoard\n\t\t.messages\n\t\t.delete(messageId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request DELETE '/messageboard/messages/${MESSAGE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /messageboard/messages:
    get:
      tags:
      - Messages
      summary: List Messages
      description: Retrieves a collection of messages from the Message Board.
      operationId: messageBoard.messages#list
      parameters:
      - name: expiry.from
        in: query
        description: Returns all messages that expiry on or after the given date.
        schema:
          type: string
          format: date
          example: 2020-01-01
      - name: expiry.until
        in: query
        description: Returns all message that expiry up until the given date.
        schema:
          type: string
          format: date
          example: 2020-12-31
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBoardMessages'
      security:
      - HMAC:
        - legacy-access-type:base
        - legacy-access-type:manager
        - legacy-access-type:admin
      - HMAC:
        - message-board:list
        - users:field:surname:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\texpiry:\
          \ {\n\t\tfrom: \"2021-01-01\"\n\t\t, until: \"2021-02-28\"\n\t}\n};\nconst\
          \ response = await aroflo.messageBoard\n\t\t.messages\n\t\t.list(query);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/messageboard/messages?expiry.from=2021-01-01&expiry.until=2021-02-28'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /orgs/clients/{client}/priorities:
    post:
      tags:
      - Client Priorities
      summary: Create Priority
      description: Creates the specified Priority.
      operationId: orgs.clients.priorities#create
      parameters:
      - name: client
        in: path
        description: Identifier of the client being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PriorityCreationInput'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Priority'
      security:
      - HMAC:
        - legacy-access-type:admin
        - user-type:employee
      - HMAC:
        - legacy-access-type:manager
        - user-type:employee
      - HMAC:
        - legacy-access-type:base
        - user-type:employee
      - HMAC:
        - clients:field:priorities:add
        - user-type:employee
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst clientId = \"XD00000D7\"\
          ;\nconst payload = {\n\t, shortDescription: \"Urgent\"\n\t, description:\
          \ \"Urgent Turnaround\"\n\t, priorityNumber: 1\n\t, responseValue: 15\n\t\
          , responseType: \"MINUTES\"\n\t, backgroundColor: \"#FF0000\"\n\t, listOrder:\
          \ 0\n\t, archived: false\n};\nconst response = await aroflo.clients\n\t\t\
          .priorities\n\t\t.create(clientId, payload);\n\n"
      - lang: shell
        label: cURL
        source: "curl --location --request POST '/clients/XD00000D7/priorities'\n\
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'\n\
          --header 'Date:  $(date --rfc-email)'\n--header 'Accept: application/json'\n\
          --header 'Content-Type: application/json'\n--data-raw '{\n\t\"shortDescription\"\
          : \"Urgent\",\n\t\"description\": \"Urgent Turnaround\",\n\t\"priorityNumber\"\
          : 1,\n\t\"responseValue\": 15,\n\t\"responseType\": \"MINUTES\",\n\t\"backgroundColor\"\
          : \"#FF0000\",\n\t\"listOrder\": 0,\n\t\"archived\": false\n}'\n\n"
  /orgs/clients/{client}/priorities/{priority}:
    patch:
      tags:
      - Client Priorities
      summary: Mutate Priority
      description: Mutates the specified Priority.
      operationId: orgs.clients.priorities#mutate
      parameters:
      - name: client
        in: path
        description: Identifier of the client being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      - name: priority
        in: path
        description: Identifier of the priority being mutated.
        required: true
        schema:
          type: string
        example: XD00000D7
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PriorityMutationInput'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Priority'
      security:
      - HMAC:
        - legacy-access-type:admin
        - user-type:employee
      - HMAC:
        - legacy-access-type:manager
        - user-type:employee
      - HMAC:
        - legacy-access-type:base
        - user-type:employee
      - HMAC:
        - clients:field:priorities:edit
        - user-type:employee
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst priorityId = \"XD000001\"\
          ;\nconst clientId = \"XD00000D7\";\nconst payload = {\n\t, shortDescription:\
          \ \"Urgent\"\n\t, description: \"Urgent Turnaround\"\n\t, priorityNumber:\
          \ 1\n\t, responseValue: 15\n\t, responseType: \"MINUTES\"\n\t, backgroundColor:\
          \ \"#FF0000\"\n\t, listOrder: 0\n\t, archived: false\n};\nconst response\
          \ = await aroflo.clients\n\t\t.priorities\n\t\t.mutate(clientId, priorityId,\
          \ payload);\n\n"
      - lang: shell
        label: cURL
        source: "curl --location --request PATCH '/clients/${BUSINESS_UNIT_ID}/priorities/${PRIORITY_ID}'\n\
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'\n\
          --header 'Date:  $(date --rfc-email)'\n--header 'Accept: application/json'\n\
          --header 'Content-Type: application/json'\n--data-raw '{\n\t\"shortDescription\"\
          : \"Urgent\",\n\t\"description\": \"Urgent Turnaround\",\n\t\"priorityNumber\"\
          : 1,\n\t\"responseValue\": 15,\n\t\"responseType\": \"MINUTES\",\n\t\"backgroundColor\"\
          : \"#FF0000\",\n\t\"listOrder\": 0,\n\t\"archived\": false\n}'\n\n"
  /orgs/clients/{client}/worktypes/{worktype}:
    get:
      tags:
      - Client Specific Rates
      summary: Retrieve Client Specific Rate
      description: Retrieves the specified Client Specific Rate.
      operationId: orgs.clients.worktypes#get
      parameters:
      - name: client
        in: path
        description: Identifier of the client being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      - name: worktype
        in: path
        description: Identifier of the work type being retrieved.
        required: true
        schema:
          type: string
        example: DX00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSpecificRate'
      security:
      - HMAC:
        - legacy-access-type:admin
        - viewing-clients
      - HMAC:
        - legacy-access-type:manager
        - viewing-clients
      - HMAC:
        - legacy-access-type:base
        - viewing-clients
      - HMAC:
        - clients:view
        - clients:field:rates:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst clientId = \"XD000001\"\
          ;\nconst workTypeId = \"DX000001\";\nconst response = await aroflo.orgs\n\
          \t\t.clients\n\t\t.worktypes\n\t\t.get(clientId, workTypeId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/clients/${CLIENT_ID}/worktypes/${WORKTYPE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /orgs/clients/{client}/worktypes:
    get:
      tags:
      - Client Specific Rates
      summary: List Client Specific Rates
      description: Returns details about a collection of Client Specific Rates.
      operationId: orgs.clients.worktypes#list
      parameters:
      - name: client
        in: path
        description: Identifier of the client being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      - name: workTypes
        in: query
        description: Comma separated list of work type identifiers to search for.
          If not provided then a search for all work types will be performed.
        schema:
          type: string
        example: "XD00000D7,XD00000D8"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSpecificRates'
      security:
      - HMAC:
        - legacy-access-type:admin
        - viewing-clients
      - HMAC:
        - legacy-access-type:manager
        - viewing-clients
      - HMAC:
        - legacy-access-type:base
        - viewing-clients
      - HMAC:
        - clients:view
        - clients:field:rates:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tworktypes:\
          \ \"DX00000D1, DX00000D2\"\n};\nconst response = await aroflo.orgs\n\t\t\
          .clients\n\t\t.worktypes\n\t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/clients/${CLIENT_ID}/worktypes/?worktypes=DX00000D1,DX00000D2'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/overheads/{overhead}:
    get:
      tags:
      - Overheads
      summary: Retrieve Overhead
      description: Retrieves the specified Overhead.
      operationId: timesheets.overheads#get
      parameters:
      - name: overhead
        in: path
        description: Identifier of the Overhead being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Overhead'
      security:
      - HMAC:
        - timesheet:overhead:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst overheadId = \"XD000001\"\
          ;\nconst response = await aroflo.timesheets\n\t\t.overheads\n\t\t.get(overheadId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/overheads/${OVERHEAD_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /permissiongroups:
    post:
      tags:
      - Permission Groups
      summary: Create Permission Group
      description: Creates a new permission group.
      operationId: permissiongroups#create
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PermissionGroupCreationInput'
      responses:
        "201":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
      security:
      - HMAC:
        - legacy-access-type:admin
        - site-administration
      - HMAC:
        - permission-groups:create
        - site-administration
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst payload = {\n\tname:\
          \ \"group name\",\n\tpermissions: [\n\t\t\"inventory:list\",\n\t\t\"inventory:view\"\
          \n\t]\n};\nconst response = await aroflo.permissiongroups\n\t\t.create(payload);\n\
          \n"
      - lang: shell
        label: cURL
        source: "curl --location --request POST '/permissiongroups'\n--header 'Authorization:\
          \ HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'\n--header 'Date:  $(date\
          \ --rfc-email)'\n--header 'Accept: application/json'\n--header 'Content-Type:\
          \ application/json'\n--data-raw '{\n\t\t\"name\": \"group name\",\n\t\t\"\
          permissions\": [\"inventory:list\", \"inventory:view\"]\n}'\n\n"
  /permissiongroups/{group_id}/users:
    post:
      tags:
      - Permission Group User Links
      summary: Add User to Permission Group
      description: Creates a link between a permission group and a user.
      operationId: permissiongroups.users#create
      parameters:
      - name: group_id
        in: path
        description: Identifier of the permission group users are being added to.
        required: true
        schema:
          type: string
        example: XD00000D7
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PermissionGroupUserLinkCreationInput'
      responses:
        "201":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserExtendedSchema'
      security:
      - HMAC:
        - legacy-access-type:admin
        - site-administration
      - HMAC:
        - users:field:permission-groups:add
        - site-administration
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst permissionGroupId\
          \ = \"XD000001\";\nconst payload = {\n\tuser: \"XD000001\"\n};\nconst response\
          \ = await aroflo.permissiongroups\n\t\t.users\n\t\t.create(permissionGroupId,\
          \ payload);\n\n"
      - lang: shell
        label: cURL
        source: "curl --location --request PATCH '/permissiongroups/${group_id}/users'\n\
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'\n\
          --header 'Date:  $(date --rfc-email)'\n--header 'Accept: application/json'\n\
          --header 'Content-Type: application/json'\n--data-raw '{\n\t\"user\": \"\
          XD000001\"\n}'\n\n"
  /permissiongroups/{group_id}:
    get:
      tags:
      - Permission Groups
      summary: Retrieve Permission Group
      description: Retrieves the specified Permission Group.
      operationId: permissiongroups#get
      parameters:
      - name: group_id
        in: path
        description: Identifier of the Permission Group being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
      security:
      - HMAC:
        - legacy-access-type:admin
        - site-administration
      - HMAC:
        - permission-groups:view
        - site-administration
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst permissionGroupId\
          \ = \"XD000001\";\nconst response = await aroflo.permissiongroups\n\t\t\
          .get(permissionGroupId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/permissiongroups/${GROUP_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /positions/{position}:
    get:
      tags:
      - Positions
      summary: Describe Position
      description: Retrieves the specified Position.
      operationId: users.positions#get
      parameters:
      - name: position
        in: path
        description: Identifier of the position being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'
      security:
      - HMAC:
        - legacy-access-type:admin
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst positionId = \"XD000001\"\
          ;\nconst response = await aroflo.users\n\t\t.positions\n\t\t.get(positionId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/positions/${POSITION_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /positions:
    get:
      tags:
      - Positions
      summary: List Positions
      description: Returns details about a collection of Positions.
      operationId: users.positions#list
      parameters:
      - name: belongs_to
        in: query
        description: |-
          Identifier of the Business Unit to retrieve Positions from.

          If this parameter is not provided or empty, then will use the Top Level Business Unit.
        schema:
          type: string
        example: XS000001
      - name: archived
        in: query
        description: Flag indicating whether archived or non-archived Positions should
          be returned.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionCollectionSchema'
      security:
      - HMAC:
        - legacy-access-type:admin
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tbelongs_to:\
          \ \"XD00001\"\n\t, archived: false\n};\nconst response = await aroflo.users\n\
          \t\t.positions\n\t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/positions?archived=FALSE&belongs_to=XD00001'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /priorities/{priority}:
    get:
      tags:
      - Priorities
      summary: Retrieve Priority
      description: Retrieves the specified Priority.
      operationId: priorities#get
      parameters:
      - name: priority
        in: path
        description: Identifier of the Priority being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Priority'
      security:
      - HMAC:
        - legacy-access-type:admin
        - legacy-access-type:manager
        - legacy-access-type:base
      - HMAC:
        - priorities:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst priorityId = \"XD000001\"\
          ;\nconst response = await aroflo.priorities\n\t\t.get(priorityId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/priorities/${PRIORITY_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /priorities:
    get:
      tags:
      - Priorities
      summary: List Priorities
      description: Returns details about a collection of Priorities.
      operationId: priorities#list
      parameters:
      - name: description
        in: query
        description: Filters priorities by their description. The following query
          modifiers may be applied to alter the matching pattern.<ul><li>`description.like`
          will return results that contain the given value within the name.</li><li>`description.begins_with`
          will return results that begin with the provided value.</li><li>`description.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 250
          type: string
        example: Critical Turnaround
      - name: short_description
        in: query
        description: Filters priorities by their short description. The following
          query modifiers may be applied to alter the matching pattern.<ul><li>`short_description.like`
          will return results that contain the given value within the name.</li><li>`short_description.begins_with`
          will return results that begin with the provided value.</li><li>`short_description.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 16
          type: string
        example: Critical
      - name: applied_to
        in: query
        description: Identifier of the org to retrieve priorities from.
        schema:
          type: string
        example: XD000001
      - name: archived
        in: query
        description: Flag indicating whether archived or non-archived Types should
          be returned.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: sort
        in: query
        description: Data to sort the results on.
        schema:
          type: string
          enum:
          - SHORT_DESCRIPTION
          - DESCRIPTION
          - LIST_ORDER
          - ORG_ID
        example: LIST_ORDER
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Priorities'
      security:
      - HMAC:
        - legacy-access-type:admin
        - legacy-access-type:manager
        - legacy-access-type:base
      - HMAC:
        - priorities:list
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tarchived:\
          \ false\n\t, description: {\n\t\tequals: \"Urgent Priority\"\n\t}\n\t, short_description:\
          \ {\n\t\tlike: \"Urgent\"\n\t}\n\t, applied_to:\"XD000001\"\n\t, sort: \"\
          LIST_ORDER\"\n\t, order: \"ASCENDING\"\n};\nconst response = await aroflo.priorities\n\
          \t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/priorities?archived=FALSE&description.equals=Critical%20Turnaround&short_description.like=Critical&applied_to=XD000001&sort=LIST_ORDER&order=ASCENDING'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /projects/{project}:
    get:
      tags:
      - Projects
      summary: Describe Project
      description: Retrieves the specified Project.
      operationId: projects#get
      parameters:
      - name: project
        in: path
        description: Identifier of the project being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      security:
      - HMAC:
        - legacy-access-type:admin
        - legacy-access-type:manager
        - legacy-access-type:base
      - HMAC:
        - project:type:standard:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst projectId = \"XD000001\"\
          ;\nconst response = await aroflo.projects\n\t\t.get(projectId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/projects/${PROJECT_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /projects:
    get:
      tags:
      - Projects
      summary: List Projects
      description: Retrieves a paginated collection Projects.
      operationId: projects#list
      parameters:
      - name: belongs_to
        in: query
        description: "Identifier of the business unit to retrieve projects from.<p>If\
          \ the provided identifier is that of the Top Level Business Unit, then all\
          \ projects within the site are returned.</p>"
        schema:
          type: string
        example: XD000001
      - name: applied_to
        in: query
        description: Identifier of the organization of which projects have been applied
          to. This is generally the client whom the project is for.
        schema:
          type: string
        example: XD000001
      - name: status
        in: query
        description: Comma separated list of statuses to search for. If not provided
          then a search for all statues will be performed.
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - OPEN
            - CLOSED
        example: "IN_PROGRESS,COMPLETED"
      - name: name
        in: query
        description: Filters projects by their name. The following query modifiers
          may be applied to alter the matching pattern.<ul><li>`name.like` will return
          results that contain the given value within the name.</li><li>`name.begins_with`
          will return results that begin with the provided value.</li><li>`name.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 50
          minLength: 1
          type: string
        example: electrical
      - name: project_number
        in: query
        description: Filters projects by their project number field. The following
          query modifiers may be applied to alter the matching pattern.<ul><li>`project_number.like`
          will return results that contain the given value within the project number
          field.</li><li>`project_number.begins_with` will return results that begin
          with the provided value.</li><li>`project_number.equals` will return results
          where the project number completely matches the provided value.</li></ul>
        schema:
          minimum: 1
          type: number
        example: 10
      - name: reference
        in: query
        description: Filters projects by their reference field. The following query
          modifiers may be applied to alter the matching pattern.<ul><li>`reference.like`
          will return results that contain the given value within the reference.</li><li>`reference.begins_with`
          will return results that begin with the provided value.</li><li>`reference.equals`
          will return results where the reference completely matches the provided
          value.</li></ul>All conditions are case-insensitive.
        schema:
          maxLength: 50
          minLength: 1
          type: string
        example: elec-
      - name: client_name
        in: query
        description: Filters projects by their client name. The following query modifiers
          may be applied to alter the matching pattern.<ul><li>`client_name.like`
          will return results that contain the given value within the client name.</li><li>`client_name.begins_with`
          will return results that begin with the provided value.</li><li>`client_name.equals`
          will return results where the client name completely matches the provided
          value.</li></ul>All conditions are case-insensitive.
        schema:
          maxLength: 255
          minLength: 1
          type: string
        example: avcee
      - name: stage_name
        in: query
        description: Filters projects by their stage name. The following query modifiers
          may be applied to alter the matching pattern.<ul><li>`stage_name.like` will
          return results that contain the given value within the stage name.</li><li>`stage_name.begins_with`
          will return results that begin with the provided value.</li><li>`stage_name.equals`
          will return results where the stage name completely matches the provided
          value.</li></ul>All conditions are case-insensitive.
        schema:
          maxLength: 50
          minLength: 1
          type: string
        example: initial fitting
      - name: page
        in: query
        description: Page Number
        schema:
          minimum: 1
          type: number
          default: 1
        example: 1
      - name: limit
        in: query
        description: Number of results per page.
        schema:
          maximum: 30
          minimum: 1
          type: number
          default: 30
        example: 30
      - name: sort
        in: query
        description: Data to sort the results on.<p>Contact and Manager names are
          first sorted by Surname and then further sorted by Given name.
        schema:
          type: string
          default: NAME
          enum:
          - NAME
          - PROJECT_NUMBER
          - CUSTOMER_ORDER_NUMBER
          - REFERENCE
          - CLIENT_NAME
          - CONTACT_NAME
          - START_DATE
          - END_DATE
          - PROJECT_TYPE_NAME
          - MANAGER_NAME
          - STATUS
          - BUSINESS_UNIT_NAME
        example: NAME
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
      security:
      - HMAC:
        - legacy-access-type:admin
        - legacy-access-type:manager
        - legacy-access-type:base
      - HMAC:
        - project:type:standard:list
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tbelongs_to:\
          \ \"XD000001\"\n\t, applied_to: \"XD000001\"\n\t, status: [\"IN_PROGRESS\"\
          , \"COMPLETED\"]\n\t, name: {\n\t\tlike: \"electrical\"\n\t}\n\t, project_number:\
          \ {\n\t\tlike: \"10\"\n\t}\n\t, reference: {\n\t\tlike: \"elec-01\"\n\t\
          }\n\t, client_name: {\n\t\tlike: \"Avcee\"\n\t}\n\t, stage_name: {\n\t\t\
          like: \"initial fitting\"\n\t}\n\t, page: 1\n\t, limit: 30\n\t, sort: \"\
          NAME\"\n\t, order: \"ASCENDING\"\n};\nconst response = await aroflo.projects\n\
          \t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/projects?applied_to=XD000001&belongs_to=XD000001&client_name.like=avcee&limit=30&name.like=name&order=ASCENDING&page=1&project_number.like=10&reference.like=elec-01&sort=NAME&stage_name.like=inital+fitting&status=IN_PROGRESS,COMPLETED'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /projects/retentions/schemes/{projectRetentionScheme}:
    get:
      tags:
      - Project Retention Schemes
      summary: Describe Project Retention Scheme
      description: Retrieves the specified Project Retention Scheme.
      operationId: projects.retentions.schemes#get
      parameters:
      - name: projectRetentionScheme
        in: path
        description: Identifier of the project retention scheme being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRetentionScheme'
      security:
      - HMAC:
        - legacy-access-type:admin
      - HMAC:
        - legacy-access-type:site-administration
      - HMAC:
        - projects:type:standard:view
        - projects:field:retentions:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst retentionId = \"XD000001\"\
          ;\nconst response = await aroflo.projects.retentions.schemes\n\t\t.get(retentionId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/projects/retentions/schemes/${RETENTION_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /projects/{project}/stages/{stage}:
    get:
      tags:
      - Project Stages
      summary: Describe Project Stage
      description: Retrieves the specified Project Stage.
      operationId: projects.stages#get
      parameters:
      - name: project
        in: path
        description: Identifier of the project containing the request stage.
        required: true
        schema:
          type: string
        example: XD00000D7
      - name: stage
        in: path
        description: Identifier of the project stage being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStage'
      security:
      - HMAC:
        - legacy-access-type:admin
        - legacy-access-type:manager
        - legacy-access-type:base
      - HMAC:
        - project:type:standard:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst projectId = \"XD000001\"\
          ;\nconst projectStageId = \"XD000001\";\nconst response = await aroflo.projects\n\
          \t\t.stages\n\t\t.get(projectId, projectStageId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/projects/${PROJECT_ID}/stages/${PROJECT_STAGE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /projects/{project}/stages:
    get:
      tags:
      - Project Stages
      summary: List Project Stages
      description: Retrieves a list of Project Stages.
      operationId: projects.stages#list
      parameters:
      - name: project
        in: path
        description: Identifier of the project containing the stages to retrieve.
        required: true
        schema:
          type: string
        example: XD00000D7
      - name: status
        in: query
        description: Comma separated list of statuses to search for. If not provided
          then a search for all statues will be performed.
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - OPEN
            - CLOSED
        example: "IN_PROGRESS,COMPLETED"
      - name: name
        in: query
        description: Filters project stages by their name. The following query modifiers
          may be applied to alter the matching pattern.<ul><li>`name.like` will return
          results that contain the given value within the name.</li><li>`name.begins_with`
          will return results that begin with the provided value.</li><li>`name.equals`
          will return results where the name completely matches the provided value.</li></ul>All
          conditions are case-insensitive.
        schema:
          maxLength: 50
          minLength: 1
          type: string
        example: electrical
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStages'
      security:
      - HMAC:
        - legacy-access-type:admin
        - legacy-access-type:manager
        - legacy-access-type:base
      - HMAC:
        - project:type:standard:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst projectId = \"XD000001\"\
          ;\nconst query = {\n\tname: {\n\t\tlike: \"electrical\"\n\t}\n\t, status:\
          \ [\"IN_PROGRESS\", \"COMPLETED\"]\n};\nconst response = await aroflo.projects\n\
          \t\t.stages\n\t\t.list(projectId, query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/projects/${PROJECT_ID}/stages?name.like=electrical&status=IN_PROGRESS,COMPLETED'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /projects/stages/types/{projectstagetype}:
    get:
      tags:
      - Project Stage Types
      summary: Describe Project Stage Type
      description: Returns details about a specific Project Stage Type.
      operationId: projects.stages.types#get
      parameters:
      - name: projectstagetype
        in: path
        description: Identifier of the Project Stage Type being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStageType'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst projectStageTypeId\
          \ = \"XD000001\";\nconst response = await aroflo.projects\n\t\t.stages\n\
          \t\t.types\n\t\t.get(projectStageTypeId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/projects/stages/types/${PROJECT_STAGE_TYPE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /projects/stages/types:
    get:
      tags:
      - Project Stage Types
      summary: List Project Stage Types
      description: Returns details about a collection of Project Stage Types.
      operationId: projects.stages.types#list
      parameters:
      - name: archived
        in: query
        description: Flag indicating whether archived or non-archived Stage Types
          should be returned.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: sort
        in: query
        description: Data to sort the results on.
        schema:
          type: string
          default: LIST_ORDER
          enum:
          - NAME
          - LIST_ORDER
        example: LIST_ORDER
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStageTypes'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tarchived:\
          \ false\n\t, sort: \"LIST_ORDER\"\n\t, order: \"ASCENDING\"\n};\nconst response\
          \ = await aroflo.projects\n\t\t.stages\n\t\t.types\n\t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/projects/stages/types?archived=FALSE&order=ASCENDING&sort=LIST_ORDER'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /projects/types/{projecttype}:
    get:
      tags:
      - Project Types
      summary: Describe Project Type
      description: Returns details about a specific Project Type.
      operationId: projects.types#get
      parameters:
      - name: projecttype
        in: path
        description: Identifier of the Project Type being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectType'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst projectTypeId = \"\
          XD000001\";\nconst response = await aroflo.projects\n\t\t.types\n\t\t.get(projectTypeId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/projects/types/${PROJECT_TYPE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /projects/types:
    get:
      tags:
      - Project Types
      summary: List Project Types
      description: Returns details about a collection of Project Types.
      operationId: projects.types#list
      parameters:
      - name: archived
        in: query
        description: Flag indicating whether archived or non-archived Types should
          be returned.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypes'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tarchived:\
          \ false\n};\nconst response = await aroflo.projects\n\t\t.types\n\t\t.list(query);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/projects/types?archived=FALSE'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/ratetypes/{rateType}:
    get:
      tags:
      - Rate Types
      summary: Retrieve Rate Type
      description: Retrieves the specified Rate Type.
      operationId: timesheets.rateTypes#get
      parameters:
      - name: rateType
        in: path
        description: Identifier of the Rate Type being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateType'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst rateTypeId = \"XD000001\"\
          ;\nconst response = await aroflo.timesheets\n\t\t.rateTypes\n\t\t.get(rateTypeId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/ratetypes/${RATE_TYPE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/ratetypes:
    get:
      tags:
      - Rate Types
      summary: List Rate Types
      description: Collection of Rate Type Details.
      operationId: timesheets.rateTypes#list
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateTypes'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n};\nconst\
          \ response = await aroflo.timesheets\n\t\t.rateTypes\n\t\t.list(query);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/ratetypes'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /reporting/trackingcentres/{trackingcentre}:
    get:
      tags:
      - Tracking Centres
      summary: Get Tracking Centres
      description: Obtains details about the specific tracking centre.
      operationId: reporting.trackingCentres#get
      parameters:
      - name: trackingCentre
        in: path
        description: Identifier of the Tracking Centre being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingCentre'
      security:
      - HMAC:
        - legacy-access-type:manager
        - legacy-access-type:admin
        - legacy-account-manager-type:account-manager
        - legacy-account-manager-type:compliance-and-account-manager
        - legacy-account-manager-type:compliance-and-account-manager-without-reports
      - HMAC:
        - tracking-centres:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst trackingCentreId =\
          \ \"XD000001\";\nconst response = await aroflo.reporting\n\t\t.trackingCentres\n\
          \t\t.get(trackingCentreId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/reporting/trackingcentres/${TRACKING_CENTRE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /reporting/trackingcentres:
    get:
      tags:
      - Tracking Centres
      summary: List Tracking centres
      description: Collection of Tracking Centre Details.
      operationId: reporting.trackingCentres#list
      parameters:
      - name: usage.any
        in: query
        description: Comma separated list of Tracking Centre usages to search for
          any of the provided values. If not provided then a search for all usages.
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - LABOUR
            - MATERIAL
            - EXPENSE
            - FREIGHT
        example: "LABOUR,MATERIAL"
      - name: usage.all
        in: query
        description: Comma separated list of Tracking Centre usages to search for
          all the provided values. If not provided then a search for all usages.
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - LABOUR
            - MATERIAL
            - EXPENSE
            - FREIGHT
        example: "LABOUR,MATERIAL"
      - name: usage.none
        in: query
        description: Comma separated list of Tracking Centre usages to search for
          none the provided values. If not provided then a search for all usages.
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - LABOUR
            - MATERIAL
            - EXPENSE
            - FREIGHT
        example: "LABOUR,MATERIAL"
      - name: page
        in: query
        description: Page Number
        schema:
          minimum: 1
          type: number
          default: 1
        example: 1
      - name: limit
        in: query
        description: Number of results per page.
        schema:
          maximum: 30
          minimum: 1
          type: number
          default: 30
        example: 30
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingCentres'
      security:
      - HMAC:
        - legacy-access-type:manager
        - legacy-access-type:admin
        - legacy-account-manager-type:account-manager
        - legacy-account-manager-type:compliance-and-account-manager
        - legacy-account-manager-type:compliance-and-account-manager-without-reports
      - HMAC:
        - tracking-centres:list
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tusage:\
          \ {\n\t\tany: [\"LABOUR\", \"MATERIAL\"]\n\t\t, all: [\"LABOUR\", \"MATERIAL\"\
          ]\n\t\t, none: [\"LABOUR\", \"MATERIAL\"]\n\t}\n\t, page: 1\n\t, limit:\
          \ 30\n};\nconst response = await aroflo.reporting\n\t\t.trackingCentres\n\
          \t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/reporting/trackingcentres?limit=30&page=1&usage.any=LABOUR,MATERIAL&usage.all=LABOUR,MATERIAL&usage.none=LABOUR,MATERIAL'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/timers/{timer}:
    get:
      tags:
      - Labour Timers
      summary: Retrieve Timer
      description: Retrieves the specified Timer.
      operationId: timesheets.timers#get
      parameters:
      - name: timer
        in: path
        description: Identifier of the timer being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timer'
      security:
      - HMAC:
        - task:labour-timer:view
        - timesheet:labour-timer:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst timerId = \"XD000001\"\
          ;\nconst response = await aroflo.timesheets\n\t\t.timers\n\t\t.get(timerId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/timers/${TIMER_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/timers:
    get:
      tags:
      - Labour Timers
      summary: List Timers
      description: Collection of Timer Details.
      operationId: timesheets.timers#list
      parameters:
      - name: belongs_to
        in: query
        description: Identifier of the user to retrieve timers from.
        schema:
          type: string
        example: XD000001
      - name: task
        in: query
        description: Identifier of the task to retrieve timers from.
        schema:
          type: string
        example: XD000001
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timers'
      security:
      - HMAC:
        - task:labour-timer:view
        - timesheet:labour-timer:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tbelongs_to:\
          \ \"XD000001\"\n\t, task: \"XD000001\"\n};\nconst response = await aroflo.timesheets\n\
          \t\t.timers\n\t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/timers?belongs_to=XD000001&task=XD000001'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/timers/{timer}/users:
    get:
      tags:
      - Labour Timers
      summary: Retrieve Timer User Resources
      description: Retrieves the specified Timer.
      operationId: timesheets.timers.users#list
      parameters:
      - name: timer
        in: path
        description: Identifier of the timer being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimerUserResources'
      security:
      - HMAC:
        - task:labour-timer:view
        - timesheet:labour-timer:view
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst timerId = \"XD000001\"\
          ;\nconst response = await aroflo.timesheets\n\t\t.timers\n\t\t.users\n\t\
          \t.list(timerId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/timers/${TIMER_ID}/users'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/endofday/{userId}/{date}:
    get:
      tags:
      - Timesheet Date Locks
      summary: Retrieve Timesheet Date Lock
      description: Retrieves the specified Timesheet Date Lock filtered by a user
        and a date. This endpoint only allows users with Permission Group.
      operationId: timesheets.datelocks#get
      parameters:
      - name: userId
        in: path
        description: Identifier of the User assigned to the date lock being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      - name: date
        in: path
        description: The date of the Timesheet Date Lock being retrieved. Format in
          YYYY-MM-DD
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetDateLock'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst userId = \"XD000001\"\
          ;\nconst date = \"2021-05-30\";\nconst response = await aroflo.timesheets.dateLocks\n\
          \t\t.get(userId, date);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/entries/${USER_ID}/${DATE}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/entries/{timesheetEntry}:
    get:
      tags:
      - Timesheet Entries
      summary: Retrieve Timesheet Entry
      description: "Retrieves the specified Timesheet Entry.In order to get a timesheet\
        \ that belongs to another user, you must have the permission timesheets:fields:users:view\
        \ enabled.If you are using legacy permissions you must have greater permissions\
        \ than legacy-access-type:base to view other users timesheets."
      operationId: timesheets.entries#get
      parameters:
      - name: timesheetEntry
        in: path
        description: Identifier of the Timesheet Entry being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntry'
      security:
      - HMAC:
        - legacy-access-type:base
        - user-type:employee
      - HMAC:
        - legacy-access-type:manager
        - user-type:employee
      - HMAC:
        - legacy-access-type:admin
        - user-type:employee
      - HMAC:
        - timesheets:type:overhead:view
        - user-type:employee
      - HMAC:
        - timesheets:type:tasks:view
        - user-type:employee
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst timesheetEntryId =\
          \ \"XD000001\";\nconst response = await aroflo.timesheets.entries\n\t\t\
          .get(timesheetEntryId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/entries/${TIMESHEET_ENTRY_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/entries:
    get:
      tags:
      - Timesheet Entries
      summary: List Timesheet Entries
      description: Returns details about a collection of Timesheet Entries.
      operationId: timesheet.entries#list
      parameters:
      - name: belongs_to_user
        in: query
        description: "Identifier of the user to retrieve timesheet entries from.In\
          \ order to be returned timesheets for other users, you must have the permission\
          \ timesheets:fields:users:view enabled.If you are using legacy permissions\
          \ you must have greater permissions than legacy-access-type:base to view\
          \ other users timesheets.If no belongs_to_user is specified and you do not\
          \ have this permission then only your own timesheets will be returned."
        schema:
          type: string
        example: XD000001
      - name: belongs_to_task
        in: query
        description: Identifier of the task to retrieve timesheet entries from.
        schema:
          type: string
        example: XD000001
      - name: belongs_to_overhead
        in: query
        description: Identifier of the overhead to retrieve timesheet entries from.
        schema:
          type: string
        example: XD000001
      - name: created_by_end_of_day_approval
        in: query
        description: Flag indicating whether Timesheet Entries that were created by
          end of day approval should be included in the results.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: with_signature
        in: query
        description: Flag indicating whether Timesheet Entries that have a signature
          should be included in the results.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: with_overhead
        in: query
        description: "Flag indicating whether Timesheet Entries that have an overhead\
          \ should be included in the results.In order to be returned timesheets for\
          \ with an overhead, you must have the permission timesheets:type:overheads:list\
          \ enabled.If no with_overhead is specified and you do not have this permission\
          \ then no overhead timesheets will be returned."
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: with_task
        in: query
        description: "Flag indicating whether Timesheet Entries that have a task should\
          \ be included in the results.In order to be returned timesheets for with\
          \ a task, you must have the permission timesheets:type:tasks:list enabled.If\
          \ no with_task is specified and you do not have this permission then no\
          \ task timesheets will be returned."
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: with_fixed_time
        in: query
        description: Flag indicating whether Timesheet Entries that are fixed time
          should be included in the results.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: work_date.since
        in: query
        description: Returns all Timesheet Entries with a workdate on or after the
          given date.
        schema:
          type: string
          format: date
          example: '"2018-01-02"'
      - name: work_date.until
        in: query
        description: Returns all Timesheet Entries with a workdate up to and including
          given date.
        schema:
          type: string
          format: date
          example: '"2018-01-02"'
      - name: start_time.since
        in: query
        description: Returns all Timesheet Entries with a start time on or after the
          given datetime.
        schema:
          type: string
          format: iso-date-time
          example: '"2018-01-01T00:00:00"'
      - name: start_time.until
        in: query
        description: Returns all Timesheet Entries with a start time up to and including
          given datetime.
        schema:
          type: string
          format: iso-date-time
          example: '"2018-01-30T00:00:00"'
      - name: finish_time.since
        in: query
        description: Returns all Timesheet Entries with a start time on or after the
          given datetime.
        schema:
          type: string
          format: iso-date-time
          example: '"2018-01-01T00:00:00"'
      - name: finish_time.until
        in: query
        description: Returns all Timesheet Entries with a start time up to and including
          given datetime.
        schema:
          type: string
          format: iso-date-time
          example: '"2018-01-30T00:00:00"'
      - name: page
        in: query
        description: Page Number
        schema:
          minimum: 1
          type: number
          default: 1
        example: 1
      - name: limit
        in: query
        description: Number of results per page.
        schema:
          maximum: 30
          minimum: 1
          type: number
          default: 30
        example: 30
      - name: sort
        in: query
        description: Data to sort the results on.
        schema:
          type: string
          enum:
          - WORK_DATE
          - START_TIME
        example: START_TIME
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntries'
      security:
      - HMAC:
        - legacy-access-type:base
        - user-type:employee
      - HMAC:
        - legacy-access-type:manager
        - user-type:employee
      - HMAC:
        - legacy-access-type:admin
        - user-type:employee
      - HMAC:
        - timesheets:type:overhead:list
        - user-type:employee
      - HMAC:
        - timesheets:type:tasks:list
        - user-type:employee
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tbelongs_to_user:\
          \ \"XD000001\"\n\t, belongs_to_task: \"XD000001\"\n\t, belongs_to_overhead:\
          \ \"XD000001\"\n\t, created_by_end_of_day_approval: true\n\t, with_signature:\
          \ true\n\t, with_overhead: true\n\t, with_task: true\n\t, with_fixed_time:\
          \ true\n\t, work_date: {\n\t\tsince: \"2020-01-01\"\n\t\t, until: \"2020-12-31\"\
          \n\t}\n\t, start_time: {\n\t\tsince: \"2020-01-01T00:00:00\"\n\t\t, until:\
          \ \"2020-12-31T23:59:00\"\n\t}\n\t, finish_time: {\n\t\tsince: \"2020-01-01T00:00:00\"\
          \n\t\t, until: \"2020-12-31T23:59:00\"\n\t}\n\t, page: 1\n\t, limit: 30\n\
          \t, sort: \"START_TIME\"\n\t, order: \"ASCENDING\"\n};\nconst response =\
          \ await aroflo.compliance\n\t\t.alerts\n\t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/entries?belongs_to_user=XD000001&belongs_to_task=XD000001&belongs_to_overhead=XD000001&created_by_end_of_day_approval=TRUE&with_signature=TRUE&with_overhead=TRUE&with_task=TRUE&with_fixed_time=TRUE&work_date.since=2020-01-01&work_date.until=2020-12-31&start_time.since=2020-01-01T00:00:00&start_time.until=2020-12-31T23:59:00&finish_time.since=2020-01-01T00:00:00&finish_time.until=2020-12-31T23:59:00&page=1&limit=30&order=ASCENDING&sort=START_TIME'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/reimbursements/{reimbursement}:
    get:
      tags:
      - Timesheet Reimbursements
      summary: Retrieve Timesheet Reimbursement
      description: "Retrieves the specified Timesheet Reimbursement.In order to get\
        \ a reimbursement that belongs to another user, you must have the permission\
        \ timesheets:fields:users:view enabled.If you are using legacy permissions\
        \ you must have greater permissions than legacy-access-type:base to view another\
        \ users reimbursement."
      operationId: timesheet.reimbursements#get
      parameters:
      - name: reimbursement
        in: path
        description: Identifier of the Timesheet Reimbursement being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reimbursement'
      security:
      - HMAC:
        - legacy-access-type:base
        - user-type:employee
      - HMAC:
        - legacy-access-type:manager
        - user-type:employee
      - HMAC:
        - legacy-access-type:admin
        - user-type:employee
      - HMAC:
        - timesheets:type:expenses:view
        - user-type:employee
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst reimbursementId =\
          \ \"XD000001\";\nconst response = await aroflo.timesheets.reimbursements\n\
          \t\t.get(reimbursementId);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/reimbursements/${TIMESHEET_REIMBURSEMENT_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/reimbursements:
    get:
      tags:
      - Timesheet Reimbursements
      summary: List Timesheet Reimbursements
      description: Returns details about a collection of Timesheet Reimbursements.
      operationId: timesheet.reimbursements#list
      parameters:
      - name: belongs_to_user
        in: query
        description: "Identifier of the user to retrieve reimbursements from.In order\
          \ to be returned reimbursements for other users, you must have the permission\
          \ timesheets:fields:users:view enabled.If you are using legacy permissions\
          \ you must have greater permissions than legacy-access-type:base to view\
          \ other users reimbursements.If no belongs_to_user is specified and you\
          \ do not have this permission then only your own reimbursements will be\
          \ returned."
        schema:
          type: string
        example: XD000001
      - name: belongs_to_task
        in: query
        description: Identifier of the task to retrieve reimbursements from.
        schema:
          type: string
        example: XD000001
      - name: belongs_to_expense_type
        in: query
        description: Identifier of the expense type to retrieve reimbursements from.
        schema:
          type: string
        example: XD000001
      - name: with_signature
        in: query
        description: Flag indicating whether reimbursements that have a signature
          should be included in the results.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: with_task
        in: query
        description: Flag indicating whether reimbursements that have a task should
          be included in the results.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: with_fixed_time
        in: query
        description: Flag indicating whether reimbursements that are fixed time should
          be included in the results.
        schema:
          type: string
          enum:
          - "TRUE"
          - "FALSE"
        example: true
      - name: work_date.since
        in: query
        description: Returns all Reimbursements with a workdate on or after the given
          date.
        schema:
          type: string
          format: date
          example: '"2018-01-02"'
      - name: work_date.until
        in: query
        description: Returns all reimbursements with a workdate up to and including
          given date.
        schema:
          type: string
          format: date
          example: '"2018-01-02"'
      - name: start_time.since
        in: query
        description: Returns all reimbursements with a start time on or after the
          given datetime.
        schema:
          type: string
          format: iso-date-time
          example: '"2018-01-01T00:00:00"'
      - name: start_time.until
        in: query
        description: Returns all reimbursements with a start time up to and including
          given datetime.
        schema:
          type: string
          format: iso-date-time
          example: '"2018-01-30T00:00:00"'
      - name: finish_time.since
        in: query
        description: Returns all reimbursements with a start time on or after the
          given datetime.
        schema:
          type: string
          format: iso-date-time
          example: '"2018-01-01T00:00:00"'
      - name: finish_time.until
        in: query
        description: Returns all reimbursements with a start time up to and including
          given datetime.
        schema:
          type: string
          format: iso-date-time
          example: '"2018-01-30T00:00:00"'
      - name: page
        in: query
        description: Page Number
        schema:
          minimum: 1
          type: number
          default: 1
        example: 1
      - name: limit
        in: query
        description: Number of results per page.
        schema:
          maximum: 30
          minimum: 1
          type: number
          default: 30
        example: 30
      - name: sort
        in: query
        description: Data to sort the results on.
        schema:
          type: string
          enum:
          - WORK_DATE
          - START_TIME
        example: START_TIME
      - name: order
        in: query
        description: Sorting order of the results.
        schema:
          type: string
          default: ASCENDING
          enum:
          - ASCENDING
          - DESCENDING
        example: ASCENDING
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reimbursements'
      security:
      - HMAC:
        - legacy-access-type:base
        - user-type:employee
      - HMAC:
        - legacy-access-type:manager
        - user-type:employee
      - HMAC:
        - legacy-access-type:admin
        - user-type:employee
      - HMAC:
        - timesheets:type:expenses:list
        - user-type:employee
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tbelongs_to_user:\
          \ \"XD000001\"\n\t, belongs_to_task: \"XD000001\"\n\t, created_by_end_of_day_approval:\
          \ true\n\t, with_signature: true\n\t, with_overhead: true\n\t, with_task:\
          \ true\n\t, with_fixed_time: true\n\t, work_date: {\n\t\tsince: \"2020-01-01\"\
          \n\t\t, until: \"2020-12-31\"\n\t}\n\t, start_time: {\n\t\tsince: \"2020-01-01T00:00:00\"\
          \n\t\t, until: \"2020-12-31T23:59:00\"\n\t}\n\t, finish_time: {\n\t\tsince:\
          \ \"2020-01-01T00:00:00\"\n\t\t, until: \"2020-12-31T23:59:00\"\n\t}\n\t\
          , page: 1\n\t, limit: 30\n\t, sort: \"START_TIME\"\n\t, order: \"ASCENDING\"\
          \n};\nconst response = await aroflo.timesheets\n\t\t.reimbursements\n\t\t\
          .list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/reimbursements?belongs_to_user=XD000001&belongs_to_task=XD000001&created_by_end_of_day_approval=TRUE&with_signature=TRUE&with_overhead=TRUE&with_task=TRUE&with_fixed_time=TRUE&work_date.since=2020-01-01&work_date.until=2020-12-31&start_time.since=2020-01-01T00:00:00&start_time.until=2020-12-31T23:59:00&finish_time.since=2020-01-01T00:00:00&finish_time.until=2020-12-31T23:59:00&page=1&limit=30&order=ASCENDING&sort=START_TIME'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /users/{user}/hoursofwork:
    get:
      tags:
      - User Hours of Work
      summary: Retrieve User Hours of Work Week
      description: "Retrieves the specified user's Hours of Work Week. If a day returns\
        \ <code>null</code>, the day is set to <strong>inherit</strong>.<br>Please\
        \ note that only employee users can have hours of work set up."
      operationId: users.hoursOfWorkWeek#get
      parameters:
      - name: user
        in: path
        description: Identifier of the user to retrieve hours of work for.
        required: true
        schema:
          type: string
        example: XD00000D6
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HoursOfWorkWeek'
      security:
      - HMAC:
        - users:view
        - hours-of-work:view
      - HMAC:
        - legacy-access-type:admin
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst userId = \"XD000001\"\
          ;\nconst response = await aroflo.users.hoursOfWorkWeek\n\t\t.get(userId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/users/${USER_ID}/hoursofwork'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /userinfo:
    get:
      tags:
      - Service Information
      summary: User Info
      description: Obtains details about the current authenticated user.
      operationId: users#current
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationContextSchema'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst response = await aroflo.users.current();\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/userinfo'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /users/usernames:
    get:
      tags:
      - Usernames
      summary: Username
      description: Obtains details about the a user with a defined username.
      operationId: users.usernames#get
      parameters:
      - name: username
        in: query
        description: Username to search for.
        required: true
        schema:
          type: string
        example: john.smith
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Username'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\t, username:\
          \ \"john.smith\"\n};\nconst response = await aroflo.users\n\t\t.usernames\n\
          \t\t.get(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/users/usernames?username=john.smith'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/worktypes/{workType}:
    get:
      tags:
      - Work Types
      summary: Retrieve Work Type
      description: Retrieves the specified Work Type.
      operationId: timesheets.workTypes#get
      parameters:
      - name: workType
        in: path
        description: Identifier of the Work Type being retrieved.
        required: true
        schema:
          type: string
        example: XD00000D7
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkType'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst workTypeId = \"XD000001\"\
          ;\nconst response = await aroflo.timesheets\n\t\t.workTypes\n\t\t.get(workTypeId);\n\
          \n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/worktypes/${WORK_TYPE_ID}'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/worktypes:
    get:
      tags:
      - Work Types
      summary: List Work Types
      description: Collection of Work Type Details.
      operationId: timesheets.workTypes#list
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkTypes'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst response = await aroflo.timesheets\n\
          \t\t.workTypes\n\t\t.list();\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/worktypes'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

  /timesheets/worktypes/links:
    get:
      tags:
      - Work Types
      summary: Retrieve Work Type Org Links
      description: Retrieves the Work Type Org Links.
      operationId: timesheets.workTypes.linkedOrgs#list
      parameters:
      - name: belongs_to
        in: query
        description: Identifier of the business unit to retrieve Work Type Org Links
          from.
        schema:
          type: string
        example: XD000001
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkTypeOrgLinks'
      security:
      - HMAC: []
      x-codeSamples:
      - lang: javascript
        label: Node.js
        source: "const AroFlo = require(\"aroflo-node\");\nconst aroflo = new AroFlo({\n\
          \tpublicPersonalToken: \"YOUR_PUBLIC_PERSONAL_TOKEN_GOES_HERE\",\n\tsecretSigningKey:\
          \ \"YOUR_SECRET_SIGNING_KEY_GOES_HERE\"\n});\n\nconst query = {\n\tbelongs_to:\
          \ \"XD000001\"\n};\nconst response = await aroflo.timesheets\n\t\t.workTypes\n\
          \t\t.linkedOrgs\n\t\t.list(query);\n\n"
      - lang: shell
        label: cURL
        source: |+
          curl --location --request GET '/timesheets/worktypes/links?belongs_to=XD000001'
          --header 'Authorization: HMAC ${PUBLIC_PERSONAL_TOKEN}:${HMAC_SIGNATURE}'
          --header 'Date:  $(date --rfc-email)'
          --header 'Accept: application/json'

components:
  schemas:
    ApiVersionSchema:
      title: API Version Response Schema
      type: object
      properties:
        name:
          type: string
          description: Name of the API
          example: AroFlo Extended API Platform
        version:
          type: string
          description: Current version number.
          example: 0.0.0
    BusinessUnitLinksSchema:
      title: Business Unit Links
      required:
      - office:self
      type: object
      properties:
        office:self:
          title: Link to Business Unit within AroFlo Office interface.
          type: string
          description: Link to the Business Unit within the AroFlo Office interface.
          example: https://office.aroflo.com/ims/siteAdmin/OrgSettings/index.cfm?edit=1&oiCoded=%2C27%22%5DAK%2D%5FDAR77%3C%20F%0A
    BusinessUnitSummarizedSchema:
      title: Belongs To
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/BusinessUnitLinksSchema'
        type:
          title: Type
          type: string
          description: Defines the type of organization.
          example: BUSINESS_UNIT
          enum:
          - BUSINESS_UNIT
          - CLIENT
          - INDIVIDUAL
          - CONTRACTOR
          - WHOLESALER
        legacyUrlParameter:
          title: Legacy URL Parameter
          type: string
          example: '%2C27%22%5DAK%2D%5FDAR77%3C%20F%0A'
        name:
          title: Organization's Name
          maxLength: 255
          type: string
          example: AVCEE Services
        id:
          title: Organization Identifier
          type: string
          description: Unique identifier of the organization.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        shortName:
          title: Short name
          maxLength: 6
          type: string
          example: AVCEE
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
      description: Details about the business unit that this account belongs to.
    CreditNoteAllocationCollectionLinksSchema:
      title: Credit Note Links
      type: object
      properties:
        api:
          title: Link to Self
          type: string
          example: /accounting/creditnotes/XD000001/allocations
        documentation:
          title: Link to documentation
          type: string
          example: /#operation/accounting.creditNotes.allocations#list
    CreditNoteAllocationCollectionSummarizedSchema:
      title: Allocations
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/CreditNoteAllocationCollectionLinksSchema'
        count:
          title: Number of Allocations
          minimum: 0
          type: integer
          description: Represents the total number of allocations assigned to the
            credit note.
          format: int32
          example: 3
        amount:
          title: Amount Allocated
          type: number
          description: Represents the total monetary amount that has been allocated
            from the credit note.
          example: 98.35
    CreditNoteLineItemCollectionLinksSchema:
      title: Credit Note Line Item Links
      type: object
      properties:
        api:
          title: Link to Self
          type: string
          example: /accounting/creditnotes/XD000001/lineitems
        documentation:
          title: Link to documentation
          type: string
          example: /#operation/accounting.creditNotes.lineItems#list
    CreditNoteLineItemCollectionSummarizedSchema:
      title: Line Items
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/CreditNoteLineItemCollectionLinksSchema'
        count:
          title: Number of Line Items
          minimum: 0
          type: integer
          description: Represents the total number of line items assigned to the credit
            note.
          format: int32
          example: 12
        totalTaxAmount:
          title: Total Tax Amount
          type: number
          description: Represents the total monetary tax amount of all the line items.
          example: 198.055
        totalValueAmount:
          title: Total Value Amount
          type: number
          description: Represents the total monetary amount of all the line items.
          example: 1980.55
    CreditNoteLinksSchema:
      title: Credit Note Links
      required:
      - api
      - documentation
      - office
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the credit note within the API.
          example: /accounting/creditnotes/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a credit note.
          example: /#operation/accounting.creditNotes#get
        office:
          title: Link to Credit Note within AroFlo Office interface.
          type: string
          description: Link to the credit note within the AroFlo Office interface.
          example: /ims/Site/Service/CreditNotes/index.cfm?viewExist=1&cnCoded=%2C27%22%5DAK%2D%5FDAR77%3C%20F%0A
    CreditNotePaymentCollectionLinksSchema:
      title: Credit Note Links
      type: object
      properties:
        api:
          title: Link to Self
          type: string
          example: /accounting/creditnotes/XD000001/payments
        documentation:
          title: Link to documentation
          type: string
          example: /#operation/accounting.creditNotes.payments#list
    CreditNotePaymentCollectionSummarizedSchema:
      title: Payments
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/CreditNotePaymentCollectionLinksSchema'
        count:
          title: Number of Payments
          minimum: 0
          type: integer
          description: Represents the total number of payments assigned to the credit
            note.
          format: int32
          example: 1
        amount:
          title: Amount Paid
          type: number
          description: Represents the total monetary amount that has been paid from
            the credit note.
          example: 50.95
    CreditNoteSummarizedSchema:
      type: object
      properties:
        creditNoteNumber:
          title: Credit Note Number
          minimum: 1
          type: integer
          format: int32
          example: 468
        _links:
          $ref: '#/components/schemas/CreditNoteLinksSchema'
        reference:
          title: Reference
          maxLength: 100
          type: string
        type:
          title: Type of Credit Note
          type: string
          enum:
          - PURCHASE_ORDER
          - INVOICE
          - BILL
          - SUPPLIER
          - CLIENT
        allocations:
          $ref: '#/components/schemas/CreditNoteAllocationCollectionSummarizedSchema'
        payments:
          $ref: '#/components/schemas/CreditNotePaymentCollectionSummarizedSchema'
        lineItems:
          $ref: '#/components/schemas/CreditNoteLineItemCollectionSummarizedSchema'
        totalBalanceAmount:
          title: Balance
          type: number
          description: Balance owing on the Credit Note.
        status:
          title: Status
          type: string
          description: Defines the current status.
          enum:
          - IN_PROGRESS
          - PENDING_APPROVAL
          - APPROVED
          - PROCESSED
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
        taxInclusive:
          title: Is Tax Inclusive
          type: boolean
        dateIssued:
          title: Date Issued
          type: string
          format: date
        appliedTo:
          $ref: '#/components/schemas/OrgSummarizedSchema'
    CreditNotes:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PageSchema'
        creditNotes:
          title: Credit Notes
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        count:
          title: Number of Credit Notes
          minimum: 0
          type: integer
          description: Represents the total number of credit notes.
          format: int32
          example: 3
      xml:
        name: CreditNotes
    OrgSummarizedSchema:
      title: Applied To Organization
      type: object
      properties:
        name:
          title: Organization's Name
          maxLength: 255
          type: string
          example: AVCEE Services
        type:
          title: Type
          type: string
          description: Defines the type of organization.
          example: CLIENT
          enum:
          - BUSINESS_UNIT
          - CLIENT
          - INDIVIDUAL
          - CONTRACTOR
          - WHOLESALER
        id:
          title: Organization Identifier
          type: string
          description: Unique identifier of the organization.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        legacyUrlParameter:
          title: Legacy URL Parameter
          type: string
          example: '%2C27%22%5DAK%2D%5FDAR77%3C%20F%0A'
        shortName:
          title: Short name
          maxLength: 6
          type: string
          example: AVCEE
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
      description: Details about the organization that this Object is applied to.
    PageSchema:
      type: object
      properties:
        count:
          title: Total number of pages
          minimum: 0
          type: integer
          format: int32
          example: 9
        size:
          title: Total number of results per page
          minimum: 1
          type: integer
          format: int32
          example: 30
        number:
          title: Current page number
          minimum: 1
          type: integer
          format: int32
          example: 3
    AcceptanceStatus:
      title: acceptanceStatus
      type: object
      properties:
        actionedBy:
          $ref: '#/components/schemas/UserSummarizedSchema'
        status:
          title: Status
          type: string
          enum:
          - NOT_SENT
          - AWAITING_DECISION
          - ACCEPTED
          - DECLINED
          - NEED_MORE_INFORMATION
        timestampActioned:
          title: Creation UTC Timestamp
          type: string
          format: date-time
        timestampExpires:
          title: Expires UTC Timestamp
          type: string
          format: date-time
          nullable: true
      xml:
        name: AcceptanceStatus
    BillSummarizedSchema:
      title: Bill
      type: object
      properties:
        invoiceNumber:
          title: Invoice Number
          maxLength: 50
          type: string
          example: "123"
        status:
          title: Status
          type: string
          description: Defines the current status.
          enum:
          - IN_PROGRESS
          - PENDING_APPROVAL
          - APPROVED
          - PROCESSED
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
        taxInclusive:
          title: Is Tax Inclusive
          type: boolean
        dateIssued:
          title: Date Issued
          type: string
          format: date
        dateDue:
          title: Date Due
          type: string
          format: date
        appliedTo:
          $ref: '#/components/schemas/OrgSummarizedSchema'
    CreditNote:
      type: object
      properties:
        creditNoteNumber:
          title: Credit Note Number
          minimum: 1
          type: integer
          format: int32
          example: 468
        _links:
          $ref: '#/components/schemas/CreditNoteLinksSchema'
        notes:
          $ref: '#/components/schemas/CreditNoteNoteCollectionSummarizedSchema'
        createdBy:
          $ref: '#/components/schemas/UserSummarizedSchema'
        purchaseOrder:
          $ref: '#/components/schemas/PurchaseOrderSummarizedSchema'
        invoice:
          $ref: '#/components/schemas/InvoiceSummarizedSchema'
        bill:
          $ref: '#/components/schemas/BillSummarizedSchema'
        description:
          title: Description
          type: string
        timestampCreated:
          title: UTC Creation Timestamp
          type: string
          format: date-time
        timestampProcessed:
          title: UTC Processed Timestamp
          type: string
          description: Timestamp of when the account has been processed.This field
            will be null if the account has yet to be processed.
          format: date-time
          nullable: true
        acceptanceStatus:
          $ref: '#/components/schemas/AcceptanceStatus'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        status:
          title: Status
          type: string
          description: Defines the current status.
          enum:
          - IN_PROGRESS
          - PENDING_APPROVAL
          - APPROVED
          - PROCESSED
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
        taxInclusive:
          title: Is Tax Inclusive
          type: boolean
        dateIssued:
          title: Date Issued
          type: string
          format: date
        appliedTo:
          $ref: '#/components/schemas/OrgSummarizedSchema'
        reference:
          title: Reference
          maxLength: 100
          type: string
        type:
          title: Type of Credit Note
          type: string
          enum:
          - PURCHASE_ORDER
          - INVOICE
          - BILL
          - SUPPLIER
          - CLIENT
        allocations:
          $ref: '#/components/schemas/CreditNoteAllocationCollectionSummarizedSchema'
        payments:
          $ref: '#/components/schemas/CreditNotePaymentCollectionSummarizedSchema'
        lineItems:
          $ref: '#/components/schemas/CreditNoteLineItemCollectionSummarizedSchema'
        totalBalanceAmount:
          title: Balance
          type: number
          description: Balance owing on the Credit Note.
      xml:
        name: CreditNote
    CreditNoteNoteCollectionLinksSchema:
      title: Credit Note Notes Links
      type: object
      properties:
        api:
          title: Link to Self
          type: string
          example: /accounting/creditnotes/XD000001/notes
        documentation:
          title: Link to documentation
          type: string
          example: /#operation/accounting.creditNotes.notes#list
    CreditNoteNoteCollectionSummarizedSchema:
      title: Notes
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/CreditNoteNoteCollectionLinksSchema'
        count:
          title: Number of Credit Note Notes
          minimum: 0
          type: integer
          description: Represents the total number of credit note notes.
          format: int32
          example: 3
    InvoiceSummarizedSchema:
      title: Invoice
      type: object
      properties:
        invoiceNumber:
          title: Invoice Number
          minimum: 1
          type: integer
          format: int32
          example: 123
        customerOrderNumber:
          title: Customer Order Number
          maxLength: 50
          type: string
          example: AU001020
        status:
          title: Status
          type: string
          description: Defines the current status.
          enum:
          - IN_PROGRESS
          - PENDING_APPROVAL
          - APPROVED
          - PROCESSED
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
        taxInclusive:
          title: Is Tax Inclusive
          type: boolean
        dateIssued:
          title: Date Issued
          type: string
          format: date
        dateDue:
          title: Date Due
          type: string
          format: date
        appliedTo:
          $ref: '#/components/schemas/OrgSummarizedSchema'
    PurchaseOrderSummarizedSchema:
      title: Purchase Order
      type: object
      properties:
        status:
          title: Status
          type: string
          description: Defines the current status of the purchase order.
          enum:
          - IN_PROGRESS
          - PENDING_APPROVAL
          - APPROVED
          - PROCESSED
        id:
          title: Purchase Order Identifier
          type: string
          description: Unique identifier of the purchase order.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        referenceNumber:
          title: Reference Number
          minimum: 1
          type: integer
          format: int32
        customerOrderNumber:
          title: Customer's Order Number
          maxLength: 50
          type: string
          example: "00001"
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
    UserSummarizedSchema:
      title: User
      type: object
      properties:
        givenName:
          title: Given Name
          type: string
          example: Tom
        siteAdministrator:
          title: Is Site Administrator?
          type: boolean
        familyName:
          title: Family Name
          type: string
          example: Smith
        legacyAccountManagerType:
          title: Legacy Account Manager Type
          type: string
          enum:
          - ACCOUNT_MANAGER
          - COMPLIANCE_MANAGER
          - COMPLIANCE_AND_ACCOUNT_MANAGER
          - SITE_INVOICING
          - COMPLIANCE_AND_ACCOUNT_MANAGER_WITHOUT_REPORTS
        avatar:
          title: Avatar
          type: string
          example: https://office.aroflo.com/DocStorage/N-GJ5
        legacyAccessType:
          title: Legacy Access Type
          type: string
          enum:
          - SITE_ADMIN
          - ADMIN
          - MANAGER
          - BASE
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      description: Details of the user. Will be null if the user does not belong to
        your company.
      nullable: true
    CreditNoteAllocationSummarizedSchema:
      title: Allocations
      type: object
      properties:
        timestampCreated:
          title: UTC Creation Timestamp
          type: string
          format: date-time
        id:
          title: Identifier of the Allocation
          type: string
          example: XD000001
        creditNote:
          $ref: '#/components/schemas/CreditNoteSummarizedSchema'
        amount:
          title: Amount
          type: number
          description: Monetary amount being allocated from the Credit Note.
          example: 120.0
        createdBy:
          $ref: '#/components/schemas/UserSummarizedSchema'
        purchaseOrder:
          $ref: '#/components/schemas/PurchaseOrderSummarizedSchema'
        invoice:
          $ref: '#/components/schemas/InvoiceSummarizedSchema'
        bill:
          $ref: '#/components/schemas/BillSummarizedSchema'
    CreditNoteAllocations:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/CreditNoteAllocationCollectionLinksSchema'
        allocations:
          title: Allocations
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteAllocationSummarizedSchema'
        count:
          title: Number of Allocations
          minimum: 0
          type: integer
          description: Represents the total number of allocations assigned to the
            credit note.
          format: int32
          example: 3
        amount:
          title: Amount Allocated
          type: number
          description: Represents the total monetary amount that has been allocated
            from the credit note.
          example: 98.35
      xml:
        name: CreditNoteAllocations
    CreditNoteLineItemSummarizedSchema:
      type: object
      properties:
        description:
          title: Description
          maxLength: 1000
          type: string
        type:
          type: string
          enum:
          - MATERIAL
          - FREIGHT
        partNumber:
          title: Part Number
          maxLength: 50
          type: string
          description: This field may also be referred to as the 'Order Code'.
        quantity:
          title: Quantity
          type: number
        unitValueAmount:
          type: number
        taxCode:
          type: string
        taxRate:
          type: number
        totalValueAmount:
          type: number
        taxInclusive:
          title: Is Tax Inclusive
          type: boolean
        totalTaxAmount:
          type: number
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        listOrder:
          title: List/Display Order
          type: integer
          description: Numerical value representing the default ordering of item within
            it's containing collection.
          format: int32
          example: 1
        trackingCentre:
          $ref: '#/components/schemas/TrackingCentreSummarizedSchema'
    CreditNoteLineItems:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/CreditNoteLineItemCollectionLinksSchema'
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteLineItemSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        count:
          title: Number of Line Items
          minimum: 0
          type: integer
          description: Represents the total number of line items assigned to the credit
            note.
          format: int32
          example: 12
        totalTaxAmount:
          title: Total Tax Amount
          type: number
          description: Represents the total monetary tax amount of all the line items.
          example: 198.055
        totalValueAmount:
          title: Total Value Amount
          type: number
          description: Represents the total monetary amount of all the line items.
          example: 1980.55
      xml:
        name: CreditNoteLineItems
    TrackingCentreLinksSchema:
      title: TrackingCentre Links
      required:
      - api:self
      - documentation:self
      type: object
      properties:
        api:self:
          title: Link to self
          type: string
          description: Link to the tracking centre within the API.
          example: /reporting/trackingcentres/XD000001
        documentation:self:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a tracking centre.
          example: /#operation/reporting.trackingCentres#get
    TrackingCentreSummarizedSchema:
      title: Tracking Centre
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/TrackingCentreLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
          example: Technician Labour
        timestampCreated:
          title: Timestamp Created
          type: string
          description: A UTC Timestamp of when the Timesheet Entry was created.
          example: 2011-12-03T10:15:30Z
        usage:
          title: Usage
          type: array
          description: A collection of the types of usage this Tracking Centre is
            can be used for.
          items:
            title: Usage
            type: string
            description: A collection of the types of usage this Tracking Centre is
              can be used for.
            enum:
            - LABOUR
            - MATERIAL
            - EXPENSE
            - FREIGHT
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    CreditNoteNoteSummarizedSchema:
      title: Notes
      type: object
      properties:
        visibility:
          title: Visibility
          type: string
          enum:
          - INTERNAL_ONLY
          - SHOW_CLIENT
          - SHOW_CONTRACTOR
          - SHOW_ALL
          - INTERNAL_ADMIN_ONLY
          - INTERNAL_ADMIN_AND_MANAGER_ONLY
        contentType:
          title: Content Type
          type: string
        content:
          title: Content
          type: string
        timestampCreated:
          title: UTC Creation Timestamp
          type: string
          format: date-time
        sticky:
          title: Sticky
          type: boolean
        createdBy:
          $ref: '#/components/schemas/UserSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    CreditNoteNotes:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/CreditNoteNoteCollectionLinksSchema'
        page:
          $ref: '#/components/schemas/PageSchema'
        notes:
          title: Notes
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteNoteSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        count:
          title: Number of Credit Note Notes
          minimum: 0
          type: integer
          description: Represents the total number of credit note notes.
          format: int32
          example: 3
      xml:
        name: CreditNoteNotes
    CreditNotePayments:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/CreditNotePaymentCollectionLinksSchema'
        count:
          title: Number of Payments
          minimum: 0
          type: integer
          description: Represents the total number of payments assigned to the credit
            note.
          format: int32
          example: 1
        amount:
          title: Amount Paid
          type: number
          description: Represents the total monetary amount that has been paid from
            the credit note.
          example: 50.95
      xml:
        name: CreditNotePayments
    TransactionTerm:
      title: Transaction Terms
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/TransactionTermsLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        bannerColour:
          title: Banner Colour
          type: string
        showBanner:
          title: Show Banner
          type: boolean
        days:
          title: Days
          type: integer
          format: int32
          nullable: true
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        listOrder:
          title: List/Display Order
          type: integer
          description: Numerical value representing the default ordering of item within
            it's containing collection.
          format: int32
          example: 1
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
      xml:
        name: TransactionTerm
    TransactionTermsLinksSchema:
      title: TransactionTerms Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the TransactionTerms within the API.
          example: /accounting/transactionterms/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a TransactionTerms.
          example: /#operation/transactionTerms#get
    TransactionTerms:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PageSchema'
        count:
          title: Number of Transaction Terms
          minimum: 0
          type: integer
          description: Represents the total number of Transaction Terms in the collection.
          format: int32
          example: 3
        items:
          title: Transaction Terms
          type: array
          items:
            $ref: '#/components/schemas/TransactionTerm'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: TransactionTerms
    WorkOrder:
      type: object
      properties:
        orderNumber:
          title: Order Number
          minimum: 1
          type: integer
          format: int32
          example: 468
        createdBy:
          $ref: '#/components/schemas/UserSummarizedSchema'
        description:
          title: Description
          type: string
        timestampCreated:
          title: UTC Creation Timestamp
          type: string
          format: date-time
        timestampProcessed:
          title: UTC Processed Timestamp
          type: string
          description: Timestamp of when the account has been processed.This field
            will be null if the account has yet to be processed.
          format: date-time
          nullable: true
        acceptanceStatus:
          $ref: '#/components/schemas/AcceptanceStatus'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        status:
          title: Status
          type: string
          description: Defines the current status.
          enum:
          - IN_PROGRESS
          - PENDING_APPROVAL
          - APPROVED
          - PROCESSED
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
        taxInclusive:
          title: Is Tax Inclusive
          type: boolean
        dateIssued:
          title: Date Issued
          type: string
          format: date
        appliedTo:
          $ref: '#/components/schemas/OrgSummarizedSchema'
        totalBalanceAmount:
          title: Balance
          type: number
          description: Balance owing on the Work Order.
      xml:
        name: WorkOrder
    CategoryExtendedSchema:
      type: object
      properties:
        parentCategoryExtendedSchema:
          $ref: '#/components/schemas/CategoryExtendedSchema'
        parentCategorySummarizedSchema:
          $ref: '#/components/schemas/CategorySummarizedSchema'
        primaryCategoryExtendedSchema:
          $ref: '#/components/schemas/CategoryExtendedSchema'
        primaryCategorySummarizedSchema:
          $ref: '#/components/schemas/CategorySummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        name:
          title: Name
          maxLength: 50
          type: string
        isLastLevel:
          title: Last Level
          type: boolean
          description: Flag indicating the category is the end of the folder structure.
          example: true
        levelNumber:
          title: Level Number
          type: integer
          description: Categories level number in the folder structure.
          format: int32
          example: 1
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    CategorySummarizedSchema:
      type: object
      properties:
        name:
          title: Name
          maxLength: 50
          type: string
        isLastLevel:
          title: Last Level
          type: boolean
          description: Flag indicating the category is the end of the folder structure.
          example: true
        levelNumber:
          title: Level Number
          type: integer
          description: Categories level number in the folder structure.
          format: int32
          example: 1
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    AssetCategory:
      title: Asset categories
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/AssetCategoryLinksSchema'
        parentCategory:
          $ref: '#/components/schemas/AssetCategorySummarizedSchema'
        primaryCategory:
          $ref: '#/components/schemas/AssetCategorySummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        name:
          title: Name
          maxLength: 50
          type: string
        isLastLevel:
          title: Last Level
          type: boolean
          description: Flag indicating the category is the end of the folder structure.
          example: true
        levelNumber:
          title: Level Number
          type: integer
          description: Categories level number in the folder structure.
          format: int32
          example: 1
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: AssetCategory
    AssetCategoryLinksSchema:
      title: AssetCategory Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the AssetCategory within the API.
          example: /assets/categories/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a AssetCategory.
          example: /#operation/assets.categories#get
    AssetCategorySummarizedSchema:
      title: Primary category
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/AssetCategoryLinksSchema'
        name:
          title: Name
          maxLength: 50
          type: string
        isLastLevel:
          title: Last Level
          type: boolean
          description: Flag indicating the category is the end of the folder structure.
          example: true
        levelNumber:
          title: Level Number
          type: integer
          description: Categories level number in the folder structure.
          format: int32
          example: 1
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    AssetCategoryCreationInput:
      required:
      - name
      type: object
      properties:
        name:
          title: Category Name
          maxLength: 50
          minLength: 1
          type: string
          description: The name you wish to give your category
          example: My Category
        parentIdentifier:
          title: Parent Identifier
          type: string
          description: Identifier of the parent category
          nullable: true
    CustomHolder:
      title: Custom Holders
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/CustomHolderLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
      xml:
        name: CustomHolder
    CustomHolderLinksSchema:
      title: Custom Holder Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the CustomHolder within the API.
          example: /inventory/customholders/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a CustomHolder.
          example: /#operation/inventory.customHolders#get
    CustomHolders:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PageSchema'
        count:
          title: Number of Custom Holders
          minimum: 0
          type: integer
          description: Represents the total number of Custom Holders in the collection.
          format: int32
          example: 3
        items:
          title: Custom Holders
          type: array
          items:
            $ref: '#/components/schemas/CustomHolder'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: CustomHolders
    AssetCategories:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PageSchema'
        count:
          title: Number of Asset categories
          minimum: 0
          type: integer
          description: Represents the total number of Asset categories in the collection.
          format: int32
          example: 3
        items:
          title: Asset categories
          type: array
          items:
            $ref: '#/components/schemas/AssetCategory'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: AssetCategories
    AssetType:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/AssetTypeLinksSchema'
        description:
          title: Description
          maxLength: 80
          type: string
        timestampCreated:
          title: Timestamp Created
          type: string
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
        listOrder:
          title: List/Display Order
          type: integer
          description: Numerical value representing the default ordering of item within
            it's containing collection.
          format: int32
          example: 1
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: AssetType
    AssetTypeLinksSchema:
      title: Asset type Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Asset Type within the API.
          example: /assets/types/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a asset type.
          example: /#operation/assets.types#get
    AssetTypeCreationInput:
      required:
      - name
      type: object
      properties:
        name:
          title: Name of the asset type
          type: string
          description: The name you wish to give your asset type
          example: Vehicle
        description:
          title: Description of the asset type
          type: string
          description: The description you wish to give your asset type
          example: A motor vehicle used for visiting clients houses
        listOrder:
          title: The list order for the asset type you are creating
          minimum: 0
          type: integer
          description: |-
            This number represents what order the asset type will show up, with 0 being first and the highest number (within the site) being last.<br>The list order for the site will be sequential so no gaps. As such the following rules exist on creation:

            - All existing assets with an equal and higher list order will be incremented by 1.
            - The maximum list order will be the highest existing list order plus 1
            - The default list order value will be the highest existing list order plus 1
          format: int32
          example: 3
        archived:
          title: Is the asset type we are creating archived?
          type: boolean
          description: This represents if asset type is archived or not. If archived
            it will not show up when searching for an asset type
          example: false
          default: false
    AssetTypes:
      type: object
      properties:
        count:
          title: Number of Asset Types
          minimum: 0
          type: integer
          description: Represents the total number of Asset Types in the collection.
          format: int32
          example: 3
        items:
          title: Asset Types
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: AssetTypes
    AssetTypeMutationInput:
      required:
      - name
      type: object
      properties:
        name:
          title: Name of the asset type
          type: string
          description: The name you wish to give your asset type
          nullable: true
          example: Updated Vehicle
        description:
          title: Description of the asset type
          type: string
          description: The description you wish to give your asset type
          nullable: true
          example: Updated a motor vehicle used for visiting clients houses
        listOrder:
          title: The listOrder for the asset type you are mutating
          minimum: 0
          type: integer
          description: "This number represents what order the priority will show up,\
            \ with 0 being first and the highest number being last (note: this may\
            \ be site wide, or within a specific business unit).<br>The list order\
            \ for the site will be sequential so no gaps. As such the following rules\
            \ exist on mutation.To make this easier to understand we have broken it\
            \ down:<br>\n* When also changing the archived type:\n\t* If the mutated\
            \ list order is not supplied or is set to the highest existing list order\
            \ value plus 1:\n\t\t* Changes to the mutated entry:\n\t\t\t* It will\
            \ be assigned to the highest exiting list order value plus 1 (within the\
            \ new archived type).\n\t\t* Changes to entries in the previous archived\
            \ type:\n\t\t\t* All previously higher entries will decrease by 1.\n\t\
            \t* Changes to entries in the new archived type:\n\t\t\t* No changes.\n\
            \t* If the mutated list order is between 0 and the highest existing list\
            \ order value:\n\t\t* Changes to the mutated entry:\n\t\t\t* It will be\
            \ assigned to the specified value.\n\t\t* Changes to entries in the previous\
            \ archived type:\n\t\t\t* All previously higher entries will decrease\
            \ by 1\n\t\t* Changes to entries in the new archived type:\n\t\t\t* All\
            \ equal to or higher list order values will increase by 1\n* When making\
            \ no changes to the archived type:\n\t* If the mutated list order is not\
            \ supplied:\n\t\t* No changes will occur.\n\t* If the mutated list order\
            \ is increased:\n\t\t* Changes to the mutated entry:\n\t\t\t* It will\
            \ be assigned to the specified value (up to the value of the existing\
            \ highest position).\n\t\t* Changes to the entries with the same archived\
            \ type:\n\t\t\t* All previously lower values will not change.\n\t\t\t\
            * Entries greater than the previous list order and equal to or less than\
            \ the mutated list order will decrease by 1.\n\t\t\t* Entries greater\
            \ than the mutated list order will not change.\n\t* If the mutated list\
            \ order is decreased\n\t\t* Changes to the mutated entry:\n\t\t\t* It\
            \ will be assigned to the specified value.\n\t\t* Changes to the entries\
            \ with the same archived type\n\t\t\t* All previously higher list order\
            \ values will not change.\n\t\t\t* Entries less than the previous list\
            \ order and equal to or greater than the mutated list order will increase\
            \ by 1.\n\t\t\t* Entries less than the mutated list order will not change."
          format: int32
          nullable: true
          example: 3
        archived:
          title: Is the asset type we are mutating archived?
          type: boolean
          description: |-
            This represents if asset type is archived or not. If archived it will not show up when searching for an asset type.

             Note: altering this value may have an impact on listOrder (see listOrder for more information).
          nullable: true
          example: true
          default: false
    HoursOfWork:
      title: Sunday
      type: object
      properties:
        enabled:
          title: enabled
          type: boolean
        minutes:
          title: minutes
          type: integer
          description: "The duration of the hours of work in minutes, in minutes"
          format: int64
        startTime:
          title: startTime
          type: string
          description: Time in 24-hour ISO format
          format: HH:mm:ss
        finishTime:
          title: finishTime
          type: string
          description: Time in 24-hour ISO format
          format: HH:mm:ss
        duration:
          title: duration
          type: string
          description: "The duration of the hours of work in minutes, in ISO format"
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: HoursOfWork
    HoursOfWorkWeek:
      type: object
      properties:
        monday:
          $ref: '#/components/schemas/HoursOfWork'
        tuesday:
          $ref: '#/components/schemas/HoursOfWork'
        wednesday:
          $ref: '#/components/schemas/HoursOfWork'
        thursday:
          $ref: '#/components/schemas/HoursOfWork'
        friday:
          $ref: '#/components/schemas/HoursOfWork'
        saturday:
          $ref: '#/components/schemas/HoursOfWork'
        sunday:
          $ref: '#/components/schemas/HoursOfWork'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: HoursOfWorkWeek
    Priority:
      title: Priorities
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/PriorityLinksSchema'
        description:
          title: Description
          maxLength: 250
          type: string
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
        listOrder:
          title: List/Display Order
          type: integer
          description: Numerical value representing the default ordering of item within
            it's containing collection.
          format: int32
          example: 1
        appliedTo:
          $ref: '#/components/schemas/OrgSummarizedSchema'
        shortDescription:
          title: Short Description
          maxLength: 16
          type: string
        priorityNumber:
          title: Priority Number
          type: integer
          format: int32
        responseValue:
          title: Response Value
          type: integer
          format: int32
        responseType:
          title: Response Type
          type: string
          enum:
          - NONE
          - MINUTES
          - HOURS
          - DAYS
          - WEEKS
        backgroundColor:
          title: Background Color
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: Priority
    PriorityLinksSchema:
      title: Priority Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Priority within the API.
          example: /priorities/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Priority.
          example: /#operation/priorities#get
    Color:
      title: Task type schedule background color
      type: object
      properties:
        red:
          type: integer
          format: int32
        green:
          type: integer
          format: int32
        blue:
          type: integer
          format: int32
        contrastingColor:
          $ref: '#/components/schemas/Color'
        inverseColor:
          $ref: '#/components/schemas/Color'
        luminance:
          type: number
          format: double
      nullable: true
      example: '#FFFFFF'
    PriorityCreationInput:
      required:
      - priorityNumber
      - shortDescription
      type: object
      properties:
        shortDescription:
          title: Short description of the priority
          type: string
          description: The short description you wish to give your priority
          example: Urgent
        description:
          title: Description of the priority
          type: string
          description: The description you wish to give your priority
          example: Urgent Priority
        listOrder:
          title: The list order for the Priority you are creating
          minimum: 0
          type: integer
          description: |-
            This number represents what order the priority will show up, with 0 being first and the highest number (within the site) being last.<br>The list order for the site will be sequential so no gaps. As such the following rules exist on creation:

            - All existing priorities with an equal and higher list order will be incremented by 1.
            - The maximum list order will be the highest existing list order plus 1
            - The default list order value will be the highest existing list order plus 1
          format: int32
          example: 3
        archived:
          title: Is the priority we are creating archived?
          type: boolean
          description: This represents if priority is archived or not. If archived
            it will not show up when searching for an priority.
          example: false
          default: false
        priorityNumber:
          title: Priority Number of the priority
          minimum: 0
          type: integer
          description: The priority number you wish to give your priority.
          format: int32
          example: 1
        responseValue:
          title: Response value of the priority
          minimum: 0
          type: integer
          description: "The response value you wish to give your priority. This value\
            \ is the multiplier of the responseType that will give you a response\
            \ duration.Note: The duration of the provided values of ResponseType and\
            \ ResponseValue, must be equal to 0 minutes or greater than or equal to\
            \ 15 minutes."
          format: int32
          example: 15
          default: 0
        responseType:
          title: Response type of the priority
          type: string
          description: "The response type you wish to give your priority. This value\
            \ is the multiplier of the responseValue that will give you a response\
            \ duration. Note: The duration of the provided values of ResponseType\
            \ and ResponseValue, must be equal to 0 minutes or greater than or equal\
            \ to 15 minutes."
          example: MINUTES
          default: NONE
          enum:
          - NONE
          - MINUTES
          - HOURS
          - DAYS
          - WEEKS
        backgroundColor:
          $ref: '#/components/schemas/Color'
    NullableColor:
      title: Background color of the priority.
      type: object
      properties:
        empty:
          type: boolean
        present:
          type: boolean
      description: "The background color you wish to give your priority. Note the\
        \ color must be in 3 or 6 character length hexadecimal format, with a preceding\
        \ \"#\"."
      example: '#FF00FF'
      default: "null"
    PriorityMutationInput:
      required:
      - priorityNumber
      - shortDescription
      type: object
      properties:
        shortDescription:
          title: Short description of the priority
          type: string
          description: The short description you wish to give your priority
          example: Urgent
        description:
          title: Description of the priority
          type: string
          description: The description you wish to give your priority
          example: Urgent Priority
        listOrder:
          title: The list order for the Priority you are creating
          minimum: 0
          type: integer
          description: "This number represents what order the priority will show up,\
            \ with 0 being first and the highest number being last (note: this may\
            \ be site wide, or within a specific business unit).<br>The list order\
            \ for the site will be sequential so no gaps. As such the following rules\
            \ exist on mutation.To make this easier to understand we have broken it\
            \ down:<br>\n* When also changing the archived type:\n\t* If the mutated\
            \ list order is not supplied or is set to the highest existing list order\
            \ value plus 1:\n\t\t* Changes to the mutated entry:\n\t\t\t* It will\
            \ be assigned to the highest exiting list order value plus 1 (within the\
            \ new archived type).\n\t\t* Changes to entries in the previous archived\
            \ type:\n\t\t\t* All previously higher entries will decrease by 1.\n\t\
            \t* Changes to entries in the new archived type:\n\t\t\t* No changes.\n\
            \t* If the mutated list order is between 0 and the highest existing list\
            \ order value:\n\t\t* Changes to the mutated entry:\n\t\t\t* It will be\
            \ assigned to the specified value.\n\t\t* Changes to entries in the previous\
            \ archived type:\n\t\t\t* All previously higher entries will decrease\
            \ by 1\n\t\t* Changes to entries in the new archived type:\n\t\t\t* All\
            \ equal to or higher list order values will increase by 1\n* When making\
            \ no changes to the archived type:\n\t* If the mutated list order is not\
            \ supplied:\n\t\t* No changes will occur.\n\t* If the mutated list order\
            \ is increased:\n\t\t* Changes to the mutated entry:\n\t\t\t* It will\
            \ be assigned to the specified value (up to the value of the existing\
            \ highest position).\n\t\t* Changes to the entries with the same archived\
            \ type:\n\t\t\t* All previously lower values will not change.\n\t\t\t\
            * Entries greater than the previous list order and equal to or less than\
            \ the mutated list order will decrease by 1.\n\t\t\t* Entries greater\
            \ than the mutated list order will not change.\n\t* If the mutated list\
            \ order is decreased\n\t\t* Changes to the mutated entry:\n\t\t\t* It\
            \ will be assigned to the specified value.\n\t\t* Changes to the entries\
            \ with the same archived type\n\t\t\t* All previously higher list order\
            \ values will not change.\n\t\t\t* Entries less than the previous list\
            \ order and equal to or greater than the mutated list order will increase\
            \ by 1.\n\t\t\t* Entries less than the mutated list order will not change."
          format: int32
          example: 3
        archived:
          title: Is the priority we are creating archived?
          type: boolean
          description: This represents if priority is archived or not. If archived
            it will not show up when searching for an priority.
          example: false
          default: false
        priorityNumber:
          title: Priority Number of the priority
          minimum: 0
          type: integer
          description: The priority number you wish to give your priority.
          format: int32
          example: 1
        responseValue:
          title: Response value of the priority
          minimum: 0
          type: integer
          description: "The response value you wish to give your priority. This value\
            \ is the multiplier of the responseType that will give you a response\
            \ duration.Note: The duration of the provided values of ResponseType and\
            \ ResponseValue, must be equal to 0 minutes or greater than or equal to\
            \ 15 minutes."
          format: int32
          example: 15
          default: 0
        responseType:
          title: Response type of the priority
          type: string
          description: "The response type you wish to give your priority. This value\
            \ is the multiplier of the responseValue that will give you a response\
            \ duration. Note: The duration of the provided values of ResponseType\
            \ and ResponseValue, must be equal to 0 minutes or greater than or equal\
            \ to 15 minutes."
          example: MINUTES
          default: NONE
          enum:
          - NONE
          - MINUTES
          - HOURS
          - DAYS
          - WEEKS
        backgroundColor:
          $ref: '#/components/schemas/NullableColor'
    ComplianceAlert:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ComplianceAlertLinksSchema'
        description:
          title: Description
          maxLength: 500
          minLength: 1
          type: string
        timestampCreated:
          title: Timestamp Created
          type: string
        user:
          $ref: '#/components/schemas/UserSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        status:
          title: Status
          type: string
          enum:
          - OPEN
          - CLOSED
        reference:
          title: Reference Number
          type: integer
          format: int32
        expiryDate:
          title: Expiry Date
          type: string
        product:
          title: Product
          maxLength: 50
          minLength: 1
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
      xml:
        name: ComplianceAlert
    ComplianceAlertLinksSchema:
      title: Compliance Alert Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Compliance Alert within the API.
          example: /compliance/alerts/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Compliance Alert.
          example: /#operation/compliance.alerts#get
    ComplianceAlertSummarizedSchema:
      title: Compliance Alerts
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ComplianceAlertLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        status:
          title: Status
          type: string
          enum:
          - OPEN
          - CLOSED
        reference:
          title: Reference Number
          type: integer
          format: int32
        expiryDate:
          title: Expiry Date
          type: string
        product:
          title: Product
          maxLength: 50
          minLength: 1
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
    ComplianceAlerts:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PageSchema'
        count:
          title: Number of Compliance Alerts
          minimum: 0
          type: integer
          description: Represents the total number of Compliance Alerts in the collection.
          format: int32
          example: 3
        items:
          title: Compliance Alerts
          type: array
          items:
            $ref: '#/components/schemas/ComplianceAlertSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: ComplianceAlerts
    ExpenseType:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ExpenseTypeLinksSchema'
        includedInTimesheetTotals:
          title: Expense type is Included in timesheet totals
          type: boolean
        taskOverhead:
          title: Task Overhead
          type: boolean
        costRate:
          title: Expense cost rate
          type: number
        sellEx:
          title: Expense sell ex
          type: number
        unitType:
          title: Expense unit yype
          type: string
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        name:
          title: Expense type name
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: ExpenseType
    ExpenseTypeLinksSchema:
      title: ExpenseType Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the ExpenseType within the API.
          example: /timesheets/expensetypes/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a ExpenseType.
          example: /#operation/timesheets.expenseTypes#get
    Country:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/CountryLinksSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        name:
          title: Name
          maxLength: 250
          minLength: 1
          type: string
        code:
          title: Code
          maxLength: 3
          minLength: 1
          type: string
        localeCode:
          title: Locale Code
          maxLength: 3
          minLength: 1
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: Country
    CountryLinksSchema:
      title: Country Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Country within the API.
          example: /geography/countries/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Country.
          example: /#operation/geography.countries#get
    Countries:
      type: object
      properties:
        count:
          title: Number of Countries
          minimum: 0
          type: integer
          description: Represents the total number of Countries in the collection.
          format: int32
          example: 3
        items:
          title: Countries
          type: array
          items:
            $ref: '#/components/schemas/CountrySummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: Countries
    CountrySummarizedSchema:
      title: Countries
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/CountryLinksSchema'
        name:
          title: Name
          maxLength: 250
          minLength: 1
          type: string
        code:
          title: Code
          maxLength: 3
          minLength: 1
          type: string
        localeCode:
          title: Locale Code
          maxLength: 3
          minLength: 1
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    Request:
      type: object
    Response:
      type: object
    GpsCoordinate:
      title: Location gpsCoordinates
      type: object
      properties:
        longitude:
          title: Longitude
          type: number
          format: double
          example: 145.2149785
        latitude:
          title: Latitude
          type: number
          format: double
          example: -37.8181978
      xml:
        name: GpsCoordinate
    State:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/StateLinksSchema'
        gpsCoordinate:
          $ref: '#/components/schemas/GpsCoordinate'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        name:
          title: Name
          maxLength: 250
          minLength: 1
          type: string
        code:
          title: Code
          maxLength: 250
          minLength: 1
          type: string
        utcOffset:
          title: utcOffset
          type: integer
          description: The states UTC timezone offset in minutes.
          format: int32
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: State
    StateLinksSchema:
      title: State Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the State within the API.
          example: /geography/states/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a State.
          example: /#operation/geography.states#get
    StateSummarizedSchema:
      title: States
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/StateLinksSchema'
        gpsCoordinate:
          $ref: '#/components/schemas/GpsCoordinate'
        name:
          title: Name
          maxLength: 250
          minLength: 1
          type: string
        code:
          title: Code
          maxLength: 250
          minLength: 1
          type: string
        utcOffset:
          title: utcOffset
          type: integer
          description: The states UTC timezone offset in minutes.
          format: int32
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    States:
      type: object
      properties:
        count:
          title: Number of States
          minimum: 0
          type: integer
          description: Represents the total number of States in the collection.
          format: int32
          example: 3
        items:
          title: States
          type: array
          items:
            $ref: '#/components/schemas/StateSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: States
    GraphQLRequest:
      type: object
      properties:
        query:
          type: string
          description: GraphQL query to execute..
          example: "query($ID: ID!) { resourceZone(id: $ID) { id name } }"
        variables:
          type: object
          additionalProperties:
            type: object
            description: Collection of parameters to apply to the query.
            example:
              ID: XD0000000
          description: Collection of parameters to apply to the query.
          example:
            ID: XD0000000
        operationName:
          type: string
          description: Name of the GraphQL operation to execute.
          example: resourceZone
    JobControl:
      title: Job Control Items
      type: object
      properties:
        quotes:
          type: integer
          description: Total Open Quotes
          format: int32
        tasks:
          type: integer
          description: Total Open Tasks
          format: int32
        projects:
          type: integer
          description: Total Open Projects
          format: int32
        complianceForms:
          type: integer
          description: Total Open Compliance Forms
          format: int32
        unreadTasks:
          type: integer
          description: Total Open Unread Tasks
          format: int32
        completedTasks:
          type: integer
          description: Total number of tasks that are waiting to be invoiced
          format: int32
        scheduledTasks:
          type: integer
          description: Total number of scheduled tasks
          format: int32
        approvedInvoices:
          type: integer
          description: Total number of Approved invoices
          format: int32
        org:
          $ref: '#/components/schemas/OrgSummarizedSchema'
      xml:
        name: JobControl
    JobControlCollection:
      type: object
      properties:
        count:
          title: Number of Job Control Items
          minimum: 0
          type: integer
          description: Represents the total number of Job Control Items in the collection.
          format: int32
          example: 3
        items:
          title: Job Control Items
          type: array
          items:
            $ref: '#/components/schemas/JobControl'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: JobControlCollection
    GeographicalAddress:
      title: GeographicalAddress
      type: object
      properties:
        country:
          title: Country
          type: string
        state:
          title: State
          type: string
        suburb:
          title: Suburb
          type: string
        postcode:
          title: Postcode
          type: string
        lineOne:
          title: Line One
          type: string
        lineTwo:
          title: Line Two
          type: string
      description: Locations GeographicalAddress details.
      xml:
        name: GeographicalAddress
    Location:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/LocationLinksSchema'
        siteContact:
          $ref: '#/components/schemas/SiteContactSchema'
        gpsCoordinate:
          $ref: '#/components/schemas/GpsCoordinate'
        appliedTo:
          $ref: '#/components/schemas/OrgSummarizedSchema'
        address:
          $ref: '#/components/schemas/GeographicalAddress'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
      xml:
        name: Location
    LocationLinksSchema:
      title: Location Links
      required:
      - api
      - documentation
      - field
      - office
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Location within the API.
          example: /locations/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Location.
          example: /#operation/locations#get
        office:
          title: Link to Location within AroFlo Office interface.
          type: string
          description: Link to the Location within the AroFlo Office interface.
          example: /ims/Site/Service/Location/index.cfm?EditThis=1&LocCoded=XXXXXXXXXXXXXXXXXXX
        field:
          title: Link to Location within AroFlo field interface.
          type: string
          description: Link to the Location within the AroFlo field interface.
          example: /Handheld/service/Location/details.cfm?viewDetails=1&LocCoded=XXXXXXXXXXXXXXXXXXX
    SiteContactSchema:
      title: Location Site Contact
      type: object
      properties:
        name:
          title: Site contact
          type: string
        email:
          title: Site contact
          type: string
        phone:
          title: Site Phone
          type: string
    GeographicalAddressSummarizedSchema:
      title: GeographicalAddress
      type: object
      properties:
        state:
          title: State
          type: string
        suburb:
          title: Suburb
          type: string
        postcode:
          title: Postcode
          type: string
        lineOne:
          title: Line One
          type: string
        lineTwo:
          title: Line Two
          type: string
      description: Locations GeographicalAddress details.
    LocationSummarizedSchema:
      title: Belongs To Location
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/LocationLinksSchema'
        siteContact:
          $ref: '#/components/schemas/SiteContactSchema'
        appliedTo:
          $ref: '#/components/schemas/OrgSummarizedSchema'
        address:
          $ref: '#/components/schemas/GeographicalAddressSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
      description: Details of the location which this Timesheet Entry belongs to.
    Locations:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PageSchema'
        count:
          title: Number of Locations
          minimum: 0
          type: integer
          description: Represents the total number of Locations.
          format: int32
          example: 3
        items:
          title: Location
          type: array
          items:
            $ref: '#/components/schemas/LocationSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: Locations
    NoteExtendedSchema:
      type: object
      properties:
        restrictions:
          $ref: '#/components/schemas/Restriction'
        visibility:
          title: Visibility
          type: string
          enum:
          - INTERNAL_ONLY
          - SHOW_CLIENT
          - SHOW_CONTRACTOR
          - SHOW_ALL
          - INTERNAL_ADMIN_ONLY
          - INTERNAL_ADMIN_AND_MANAGER_ONLY
        contentType:
          title: Content Type
          type: string
        content:
          title: Content
          type: string
        timestampCreated:
          title: UTC Creation Timestamp
          type: string
          format: date-time
        sticky:
          title: Sticky
          type: boolean
        createdBy:
          $ref: '#/components/schemas/UserSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    PermissionGroupLinksSchema:
      title: Permission Group Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Permission Group within the API.
          example: /permissiongroups/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Permission Group.
          example: /#operation/permissions.groups#get
    PermissionGroupSummarizedSchema:
      title: Permission Groups
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/PermissionGroupLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      description: A set of permission groups the user belongs to.
    Restriction:
      title: Restrictions
      type: object
      properties:
        permissionGroups:
          $ref: '#/components/schemas/PermissionGroupSummarizedSchema'
        users:
          $ref: '#/components/schemas/UserSummarizedSchema'
      description: Restrictions applied to the note
      nullable: true
      xml:
        name: Restriction
    LocationNote:
      type: object
      properties:
        restrictions:
          $ref: '#/components/schemas/Restriction'
        visibility:
          title: Visibility
          type: string
          enum:
          - INTERNAL_ONLY
          - SHOW_CLIENT
          - SHOW_CONTRACTOR
          - SHOW_ALL
          - INTERNAL_ADMIN_ONLY
          - INTERNAL_ADMIN_AND_MANAGER_ONLY
        contentType:
          title: Content Type
          type: string
        content:
          title: Content
          type: string
        timestampCreated:
          title: UTC Creation Timestamp
          type: string
          format: date-time
        sticky:
          title: Sticky
          type: boolean
        createdBy:
          $ref: '#/components/schemas/UserSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: LocationNote
    NoteCreationInput:
      required:
      - content
      type: object
      properties:
        sticky:
          title: Sticky Note
          type: boolean
          description: The notes sticky flag
          example: true
          default: false
        visibility:
          title: Note visibility
          type: string
          description: The visibility you wish the note to have.
          example: INTERNAL_ONLY
          default: INTERNAL_ONLY
          enum:
          - INTERNAL_ONLY
          - SHOW_CLIENT
          - SHOW_CONTRACTOR
          - SHOW_ALL
          - INTERNAL_ADMIN_ONLY
          - INTERNAL_ADMIN_AND_MANAGER_ONLY
        content:
          title: Note Content
          type: string
          description: The Content of the note
          example: Example Note Content
        restrictionResources:
          $ref: '#/components/schemas/restrictionResources'
    restrictionResources:
      title: Restriction Resources
      type: object
      properties:
        users:
          uniqueItems: true
          type: array
          items:
            type: string
        permissionGroups:
          uniqueItems: true
          type: array
          items:
            type: string
      description: The Resources you wish to add to the note restriction
    MessageBoardMessage:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/MessageBoardMessageLinksSchema'
        restrictedToOrg:
          $ref: '#/components/schemas/OrgSummarizedSchema'
        restrictedToUser:
          $ref: '#/components/schemas/UserSummarizedSchema'
        timestampUpdated:
          type: string
          description: UTC Timestamp of when the message was last updated.
          example: 2020-01-01T09:30:00.000Z
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        visibility:
          type: string
          description: Visibility filter applied to the message.
          enum:
          - INTERNAL_ONLY
          - INTERNAL_ADMIN_ONLY
          - INTERNAL_ADMIN_AND_MANAGER_ONLY
          - SHOW_CLIENT
          - SHOW_CONTRACTOR
          - SHOW_ALL
          - SPECIFIC_CLIENT
          - SPECIFIC_SUPPLIER
          - SPECIFIC_USER
        content:
          type: string
          description: HTML Content of the message.
          example: <p>Message Content</p>
        subject:
          maxLength: 60
          type: string
          description: Subject line of the message.
          example: Message Subject Line
        timestampCreated:
          type: string
          description: UTC Timestamp of when the message was posted.
          example: 2020-01-01T09:30:00.000Z
        expiryDate:
          type: string
          description: Expiry Date of the message.
          example: ' 2020-01-01 '
        createdBy:
          $ref: '#/components/schemas/UserSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: MessageBoardMessage
    MessageBoardMessageLinksSchema:
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the message within the API.
          example: /messageboard/messages/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a message.
          example: /#operation/messageBoard.messages#get
      description: Message Links
    MessageBoardMessageSummarizedSchema:
      title: Messages
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/MessageBoardMessageLinksSchema'
        visibility:
          type: string
          description: Visibility filter applied to the message.
          enum:
          - INTERNAL_ONLY
          - INTERNAL_ADMIN_ONLY
          - INTERNAL_ADMIN_AND_MANAGER_ONLY
          - SHOW_CLIENT
          - SHOW_CONTRACTOR
          - SHOW_ALL
          - SPECIFIC_CLIENT
          - SPECIFIC_SUPPLIER
          - SPECIFIC_USER
        content:
          type: string
          description: HTML Content of the message.
          example: <p>Message Content</p>
        subject:
          maxLength: 60
          type: string
          description: Subject line of the message.
          example: Message Subject Line
        timestampCreated:
          type: string
          description: UTC Timestamp of when the message was posted.
          example: 2020-01-01T09:30:00.000Z
        expiryDate:
          type: string
          description: Expiry Date of the message.
          example: ' 2020-01-01 '
        createdBy:
          $ref: '#/components/schemas/UserSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    MessageBoardMessages:
      type: object
      properties:
        count:
          title: Number of Messages
          minimum: 0
          type: integer
          description: Represents the total number of Messages in the collection.
          format: int32
          example: 3
        items:
          title: Messages
          type: array
          items:
            $ref: '#/components/schemas/MessageBoardMessageSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: MessageBoardMessages
    ClientSpecificRate:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ClientSpecificRateLinksSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        sellRate:
          title: Sell Rate
          type: number
          description: The Sell Rate for the Client Specific Rate.
        blockTime:
          title: Block Time
          type: integer
          description: The Block Time for the Client Specific Rate.
          format: int32
        workType:
          $ref: '#/components/schemas/WorkTypeSummarizedSchema'
        client:
          $ref: '#/components/schemas/WorkTypeSummarizedSchema'
      xml:
        name: ClientSpecificRate
    ClientSpecificRateLinksSchema:
      title: ClientSpecificRate Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Client Specific Rate within the API.
          example: /clients/XD000001/worktypes/DX000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Client Specific Rate.
          example: /#operation/clients.worktypes#get
    WorkTypeLinksSchema:
      title: Work type Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Work Type within the API.
          example: /timesheets/worktypes/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a work type.
          example: /#operation/timesheets.workTypes#get
    WorkTypeSummarizedSchema:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/WorkTypeLinksSchema'
        name:
          title: Work type name
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
      description: Details of the work type.
    ClientSpecificRateSummarizedSchema:
      title: Client Specific Rates
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ClientSpecificRateLinksSchema'
        sellRate:
          title: Sell Rate
          type: number
          description: The Sell Rate for the Client Specific Rate.
        blockTime:
          title: Block Time
          type: integer
          description: The Block Time for the Client Specific Rate.
          format: int32
        workType:
          $ref: '#/components/schemas/WorkTypeSummarizedSchema'
        client:
          $ref: '#/components/schemas/WorkTypeSummarizedSchema'
    ClientSpecificRates:
      type: object
      properties:
        count:
          title: "Number of Client Specific Rates}"
          minimum: 0
          type: integer
          description: Represents the total number of Client Specific Rates in the
            collection.
          format: int32
          example: 3
        items:
          title: Client Specific Rates
          type: array
          items:
            $ref: '#/components/schemas/ClientSpecificRateSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: ClientSpecificRates
    Overhead:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/OverheadLinksSchema'
        name:
          title: Overhead name
          type: string
        includedInTimesheetTotals:
          title: Overhead is Included in timesheet totals
          type: boolean
        taskOverhead:
          title: Task overhead
          type: boolean
        calendarLink:
          title: Overhead Calendar link
          type: boolean
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: Overhead
    OverheadLinksSchema:
      title: Overhead Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the overhead within the API.
          example: /timesheets/overheads/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a overhead.
          example: /#operation/timesheets.overheads#get
    PermissionGroup:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/PermissionGroupLinksSchema'
        systemDefault:
          title: System Default
          type: boolean
          description: Flag to indicated if the permission group is a system based
            one (and hence cannot be modified by the user).
          example: true
        segments:
          $ref: '#/components/schemas/SegmentSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: PermissionGroup
    SegmentFieldSummarizedSchema:
      title: Segment Fields
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The Permission Groups fields name.
        scopePrefix:
          title: Scope Prefix
          type: string
          description: The OAuth2 Scope prefix.
        access:
          title: field Access
          type: string
          description: Set of Access Levels the Permission group field contains.
          enum:
          - LIST
          - VIEW
          - CREATE
          - EDIT
          - DELETE
          - ADD
          - REMOVE
      description: Set of Segment Fields.
    SegmentFilterSummarizedSchema:
      title: Segment Filter
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The Permission Groups Filters name.
        scopePrefix:
          title: Scope Prefix
          type: string
          description: The OAuth2 Scope prefix.
        access:
          title: Filter Access
          type: string
          description: Set of Access Levels the Permission group Filter contains.
          enum:
          - LIST
          - VIEW
          - CREATE
          - EDIT
          - DELETE
          - ADD
          - REMOVE
      description: Set of Segment Filters.
    SegmentSummarizedSchema:
      title: Permission Group Segments.
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The Permission Groups segments name.
        scopePrefix:
          title: Scope Prefix
          type: string
          description: The OAuth2 Scope prefix.
        access:
          title: Segment Access
          type: string
          description: Set of Access Levels the Permission group segment contains.
          enum:
          - LIST
          - VIEW
          - CREATE
          - EDIT
          - DELETE
          - ADD
          - REMOVE
        types:
          $ref: '#/components/schemas/SegmentTypeSummarizedSchema'
        fields:
          $ref: '#/components/schemas/SegmentFieldSummarizedSchema'
        filters:
          $ref: '#/components/schemas/SegmentFilterSummarizedSchema'
      description: A set of permission groups segments.
      nullable: true
    SegmentTypeSummarizedSchema:
      title: Segment Types
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The Permission Groups segments name.
        scopePrefix:
          title: Scope Prefix
          type: string
          description: The OAuth2 Scope prefix.
        access:
          title: Segment Access
          type: string
          description: Set of Access Levels the Permission group segment contains.
          enum:
          - LIST
          - VIEW
          - CREATE
          - EDIT
          - DELETE
          - ADD
          - REMOVE
      description: Set of Segment Types.
    PermissionGroupCreationInput:
      required:
      - name
      - permissions
      type: object
      properties:
        name:
          title: Name of the permission group
          maxLength: 50
          minLength: 1
          type: string
          description: The name you with to give your permission group
          example: Office Management
        permissions:
          title: List of permissions
          type: array
          description: A list of permissions you wish to give your permission group
          example:
          - purchase-orders:type:standard:list
          - business-units:view
          items:
            title: List of permissions
            type: string
            description: A list of permissions you wish to give your permission group
            example: "[\"purchase-orders:type:standard:list\",\"business-units:view\"\
              ]"
    UserExtendedSchema:
      type: object
      properties:
        permissionGroups:
          $ref: '#/components/schemas/PermissionGroupSummarizedSchema'
        givenName:
          title: Given Name
          type: string
          example: Tom
        siteAdministrator:
          title: Is Site Administrator?
          type: boolean
        familyName:
          title: Family Name
          type: string
          example: Smith
        legacyAccountManagerType:
          title: Legacy Account Manager Type
          type: string
          enum:
          - ACCOUNT_MANAGER
          - COMPLIANCE_MANAGER
          - COMPLIANCE_AND_ACCOUNT_MANAGER
          - SITE_INVOICING
          - COMPLIANCE_AND_ACCOUNT_MANAGER_WITHOUT_REPORTS
        avatar:
          title: Avatar
          type: string
          example: https://office.aroflo.com/DocStorage/N-GJ5
        legacyAccessType:
          title: Legacy Access Type
          type: string
          enum:
          - SITE_ADMIN
          - ADMIN
          - MANAGER
          - BASE
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    PermissionGroupUserLinkCreationInput:
      required:
      - user
      type: object
      properties:
        user:
          type: string
          description: Identifier of the user that you wish to be added to the permission
            group.
          example: XD00000D7
    Position:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/PositionLinksSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
      xml:
        name: Position
    PositionLinksSchema:
      title: Position Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Position within the API.
          example: /positions/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Position.
          example: /#operation/users.positions#get
    PositionCollectionSchema:
      type: object
      properties:
        count:
          title: Number of Positions
          minimum: 0
          type: integer
          description: Represents the total number of Positions in the collection.
          format: int32
          example: 3
        items:
          title: Positions
          type: array
          items:
            $ref: '#/components/schemas/PositionSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
    PositionSummarizedSchema:
      title: Positions
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/PositionLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
    Priorities:
      type: object
      properties:
        count:
          title: Number of Priorities
          minimum: 0
          type: integer
          description: Represents the total number of Priorities in the collection.
          format: int32
          example: 3
        items:
          title: Priorities
          type: array
          items:
            $ref: '#/components/schemas/Priority'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: Priorities
    Project:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ProjectLinksSchema'
        description:
          title: Description
          maxLength: 1000
          type: string
        scope:
          title: Scope
          type: string
          enum:
          - OVERALL
          - CONTRACT
          - VARIATION
        contact:
          $ref: '#/components/schemas/UserSummarizedSchema'
        retentionScheme:
          $ref: '#/components/schemas/ProjectRetentionSchemeSummarizedSchema'
        stages:
          $ref: '#/components/schemas/ProjectStages'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        status:
          title: Status
          type: string
          enum:
          - OPEN
          - CLOSED
        projectNumber:
          title: Project Number
          minimum: 1
          type: integer
          format: int32
        appliedTo:
          $ref: '#/components/schemas/OrgSummarizedSchema'
        reference:
          title: Reference Number
          maxLength: 50
          type: string
        customerOrderNumber:
          title: Customer Order Number
          maxLength: 50
          type: string
        startDate:
          title: Start Due
          type: string
          format: date
        endDate:
          title: End Due
          type: string
          format: date
        noStageEnabled:
          title: No Stage Enabled
          type: boolean
          description: "Flag indicating if the `No Stage` option has been enabled\
            \ for this project.\r\n\r\nWhen enabled, this optional allows you to not\
            \ specify a Stage when adding resources (task, quotes etc) to the project.\
            \ When disabled, all resources must be assigned to a stage.\r\n\nThis\
            \ setting has no effect if the project does not contain any stages."
        type:
          $ref: '#/components/schemas/ProjectTypeSummarizedSchema'
        manager:
          $ref: '#/components/schemas/UserSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
      xml:
        name: Project
    ProjectLinksSchema:
      title: Project Links
      required:
      - api
      - documentation
      - field:self
      - office:self
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Project within the API.
          example: /projects/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Project.
          example: /#operation/projects#get
        office:self:
          title: Link to AroFlo Office Interface
          type: string
          description: Link to the project in the AroFlo Office interface.
          example: /ims/Site/Service/Projects/index.cfm?act=view&obj=prj&prjCoded=22%26>BW%2EUKE%21%2E>6HE%29L%2AG2%23P%28%2E%0A
        field:self:
          title: Link to AroFlo Field Interface
          type: string
          description: Link to the project in the AroFlo Field interface.
          example: /Handheld/service/index.cfm?projectDetails=1&jobCoded=22%26>BW%2EUKE%21%2E>6HE%29L%2AG2%23P%28%2E%0A
    ProjectRetentionSchemeLinksSchema:
      title: Project Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Project Retention Scheme within the API.
          example: /projects/retentions/schemes/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Project.
          example: /#operation/projects.retentions.schemes#get
    ProjectRetentionSchemeSummarizedSchema:
      title: Project Retention Scheme
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ProjectRetentionSchemeLinksSchema'
        completionClaimDate:
          title: Project Completion Claim Date
          type: string
          description: Date of Project Completion Claim.
          format: date
        liabilityPeriodClaimDate:
          title: Project Liability Period Claim Date
          type: string
          description: Date of Project Liability Period Claim.
          format: date
        liabilityPeriodMonths:
          title: Project Liability Period in Months
          type: integer
          description: The length of the liability or warranty period in months.
          format: int32
        projectValue:
          title: Project Value
          type: number
          description: Estimated Value of the Project.
        maxRetentionValue:
          title: Project Maximum Retention Value.
          type: number
          description: Maximum amount that may be retained by the client for this
            project.
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      description: Details of the Project's Retention Scheme where exists.
    ProjectStageLinksSchema:
      title: Project Stage Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Project Stage within the API.
          example: /projects/XD000001/stages/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Project Stage.
          example: /#operation/projects.stages#get
    ProjectStageSummarizedSchema:
      title: Project Stages
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ProjectStageLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        status:
          title: Status
          type: string
          enum:
          - OPEN
          - CLOSED
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        listOrder:
          title: List/Display Order
          type: integer
          description: Numerical value representing the default ordering of item within
            it's containing collection.
          format: int32
          example: 1
    ProjectStages:
      type: object
      properties:
        count:
          title: Number of Project Stages
          minimum: 0
          type: integer
          description: Represents the total number of Project Stages in the collection.
          format: int32
          example: 3
        items:
          title: Project Stages
          type: array
          items:
            $ref: '#/components/schemas/ProjectStageSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: ProjectStages
    ProjectTypeLinksSchema:
      title: Project Type Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Project Type within the API.
          example: /projects/types/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Project Type.
          example: /#operation/projects.types#get
    ProjectTypeSummarizedSchema:
      title: Project Types
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ProjectTypeLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        archived:
          title: Is Archived
          type: boolean
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    ProjectSummarizedSchemaWithStages:
      title: Projects
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ProjectLinksSchema'
        stages:
          $ref: '#/components/schemas/ProjectStages'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        status:
          title: Status
          type: string
          enum:
          - OPEN
          - CLOSED
        projectNumber:
          title: Project Number
          minimum: 1
          type: integer
          format: int32
        appliedTo:
          $ref: '#/components/schemas/OrgSummarizedSchema'
        reference:
          title: Reference Number
          maxLength: 50
          type: string
        customerOrderNumber:
          title: Customer Order Number
          maxLength: 50
          type: string
        startDate:
          title: Start Due
          type: string
          format: date
        endDate:
          title: End Due
          type: string
          format: date
        noStageEnabled:
          title: No Stage Enabled
          type: boolean
          description: "Flag indicating if the `No Stage` option has been enabled\
            \ for this project.\r\n\r\nWhen enabled, this optional allows you to not\
            \ specify a Stage when adding resources (task, quotes etc) to the project.\
            \ When disabled, all resources must be assigned to a stage.\r\n\nThis\
            \ setting has no effect if the project does not contain any stages."
        type:
          $ref: '#/components/schemas/ProjectTypeSummarizedSchema'
        manager:
          $ref: '#/components/schemas/UserSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
    Projects:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PageSchema'
        count:
          title: Number of Projects
          minimum: 0
          type: integer
          description: Represents the total number of Projects in the collection.
          format: int32
          example: 3
        items:
          title: Projects
          type: array
          items:
            $ref: '#/components/schemas/ProjectSummarizedSchemaWithStages'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: Projects
    ProjectRetentionScheme:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ProjectRetentionSchemeLinksSchema'
        timestampCreated:
          title: Date/time UTC retention scheme was created
          type: string
        inclusiveOfTax:
          title: Inclusive of Tax
          type: boolean
          description: "Flag indicating if Tax has been included in Retentions.\r\n\
            \r\nWhen enabled, this means Tax has been added to the estimated Project\
            \ Value."
        inclusiveOfMarkup:
          title: Inclusive of Markup.
          type: boolean
          description: "Flag indicating if Markup is included in retentions.\r\n\r\
            \nWhen enabled, this means the estimated Project Value has  been calculated\
            \ based on Sell amounts rather than Cost. "
        inclusiveOfVariations:
          title: Inclusive of Variations.
          type: boolean
          description: "Flag indicating if Variations are included in retentions.\r\
            \n\r\nWhen enabled, this means the estimated Project Value has been calculated\
            \ including variation quotes. "
        inclusiveOfNoStageItems:
          title: Inclusive of No Stage Items
          type: boolean
          description: "Flag indicating if `No Stage` items are included in retentions.\r\
            \n\r\nWhen enabled, this means the estimated Project Value has been calculated\
            \ including quotes not in a stage. "
        retentionMargin:
          title: Project Retention Margin
          maximum: 1
          minimum: 0
          type: number
          description: Margin of the project value used to calculate maximum retention
            value.
        invoiceRetentionMargin:
          title: Invoice Retention Margin
          maximum: 1
          minimum: 0
          type: number
          description: Margin of each project invoice to be retained by the client
            up to to maximum retention value.
        project:
          $ref: '#/components/schemas/ProjectSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        completionClaimDate:
          title: Project Completion Claim Date
          type: string
          description: Date of Project Completion Claim.
          format: date
        liabilityPeriodClaimDate:
          title: Project Liability Period Claim Date
          type: string
          description: Date of Project Liability Period Claim.
          format: date
        liabilityPeriodMonths:
          title: Project Liability Period in Months
          type: integer
          description: The length of the liability or warranty period in months.
          format: int32
        projectValue:
          title: Project Value
          type: number
          description: Estimated Value of the Project.
        maxRetentionValue:
          title: Project Maximum Retention Value.
          type: number
          description: Maximum amount that may be retained by the client for this
            project.
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: ProjectRetentionScheme
    ProjectSummarizedSchema:
      title: Project
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ProjectLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        status:
          title: Status
          type: string
          enum:
          - OPEN
          - CLOSED
        projectNumber:
          title: Project Number
          minimum: 1
          type: integer
          format: int32
        appliedTo:
          $ref: '#/components/schemas/OrgSummarizedSchema'
        reference:
          title: Reference Number
          maxLength: 50
          type: string
        customerOrderNumber:
          title: Customer Order Number
          maxLength: 50
          type: string
        startDate:
          title: Start Due
          type: string
          format: date
        endDate:
          title: End Due
          type: string
          format: date
        noStageEnabled:
          title: No Stage Enabled
          type: boolean
          description: "Flag indicating if the `No Stage` option has been enabled\
            \ for this project.\r\n\r\nWhen enabled, this optional allows you to not\
            \ specify a Stage when adding resources (task, quotes etc) to the project.\
            \ When disabled, all resources must be assigned to a stage.\r\n\nThis\
            \ setting has no effect if the project does not contain any stages."
        type:
          $ref: '#/components/schemas/ProjectTypeSummarizedSchema'
        manager:
          $ref: '#/components/schemas/UserSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
      description: Summarized details about the project this stage belongs to.
    ProjectStage:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ProjectStageLinksSchema'
        type:
          $ref: '#/components/schemas/ProjectStageTypeSummarizedSchema'
        project:
          $ref: '#/components/schemas/ProjectSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        status:
          title: Status
          type: string
          enum:
          - OPEN
          - CLOSED
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        listOrder:
          title: List/Display Order
          type: integer
          description: Numerical value representing the default ordering of item within
            it's containing collection.
          format: int32
          example: 1
      xml:
        name: ProjectStage
    ProjectStageTypeLinksSchema:
      title: Project Stage Type Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Project Stage Type within the API.
          example: /projects/stages/types/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Project Stage Type.
          example: /#operation/projects.stages.types#get
    ProjectStageTypeSummarizedSchema:
      title: Project Stage Type
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ProjectStageTypeLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    ProjectStageType:
      title: Project Stage Types
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ProjectStageTypeLinksSchema'
        description:
          title: Description
          maxLength: 1000
          minLength: 1
          type: string
        listOrder:
          title: List/Display Order
          type: integer
          description: Numerical value representing the default ordering of item within
            it's containing collection.
          format: int32
          example: 1
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: ProjectStageType
    ProjectStageTypes:
      type: object
      properties:
        count:
          title: Number of Project Stage Types
          minimum: 0
          type: integer
          description: Represents the total number of Project Stages Types in the
            collection.
          format: int32
          example: 3
        items:
          title: Project Stage Types
          type: array
          items:
            $ref: '#/components/schemas/ProjectStageType'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: ProjectStageTypes
    ProjectType:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ProjectTypeLinksSchema'
        stages:
          $ref: '#/components/schemas/ProjectTypeStages'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        archived:
          title: Is Archived
          type: boolean
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: ProjectType
    ProjectTypeStage:
      title: Project Type Stages
      type: object
      properties:
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        stageType:
          $ref: '#/components/schemas/ProjectStageTypeSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        listOrder:
          title: List/Display Order
          type: integer
          description: Numerical value representing the default ordering of item within
            it's containing collection.
          format: int32
          example: 1
      xml:
        name: ProjectTypeStage
    ProjectTypeStages:
      title: Stages
      type: object
      properties:
        count:
          title: Number of Project Type Stages
          minimum: 0
          type: integer
          description: Represents the total number of Project Type Stages in the collection.
          format: int32
          example: 3
        items:
          title: Project Type Stages
          type: array
          items:
            $ref: '#/components/schemas/ProjectTypeStage'
      xml:
        name: ProjectTypeStages
    ProjectTypes:
      type: object
      properties:
        count:
          title: Number of Project Types
          minimum: 0
          type: integer
          description: Represents the total number of Project Types in the collection.
          format: int32
          example: 3
        items:
          title: Project Types
          type: array
          items:
            $ref: '#/components/schemas/ProjectTypeSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: ProjectTypes
    RateType:
      type: object
      properties:
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        multiplier:
          title: Rate type multiplier
          type: number
        name:
          title: Rate type name
          type: string
        listOrder:
          title: Rate type list order
          type: integer
          format: int32
        shortName:
          title: Rate type short name
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: RateType
    RateTypeSummarizedSchema:
      title: Rate Type
      type: object
      properties:
        multiplier:
          title: Rate type multiplier
          type: number
        name:
          title: Rate type name
          type: string
        listOrder:
          title: Rate type list order
          type: integer
          format: int32
        shortName:
          title: Rate type short name
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
    RateTypes:
      type: object
      properties:
        count:
          title: Number of rate types
          minimum: 0
          type: integer
          description: Represents the total number of rate types in the collection.
          format: int32
          example: 3
        items:
          title: Rate Types
          type: array
          items:
            $ref: '#/components/schemas/RateTypeSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: RateTypes
    TrackingCentre:
      title: TrackingCentres
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/TrackingCentreLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
          example: Technician Labour
        timestampCreated:
          title: Timestamp Created
          type: string
          description: A UTC Timestamp of when the Timesheet Entry was created.
          example: 2011-12-03T10:15:30Z
        usage:
          title: Usage
          type: array
          description: A collection of the types of usage this Tracking Centre is
            can be used for.
          items:
            title: Usage
            type: string
            description: A collection of the types of usage this Tracking Centre is
              can be used for.
            enum:
            - LABOUR
            - MATERIAL
            - EXPENSE
            - FREIGHT
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: TrackingCentre
    TrackingCentres:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PageSchema'
        count:
          title: Number of TrackingCentres
          minimum: 0
          type: integer
          description: Represents the total number of TrackingCentres in the collection.
          format: int32
          example: 3
        items:
          title: TrackingCentres
          type: array
          items:
            $ref: '#/components/schemas/TrackingCentre'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: TrackingCentres
    Timer:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/TimerLinksSchema'
        timestampStarted:
          title: UTC Creation Timestamp
          type: string
          format: date-time
        ownedBy:
          $ref: '#/components/schemas/UserSummarizedSchema'
        note:
          title: Timer Note
          type: string
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        trackingCentre:
          $ref: '#/components/schemas/TrackingCentreSummarizedSchema'
      xml:
        name: Timer
    TimerLinksSchema:
      title: Timer Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the timer within the API.
          example: /timesheets/timers/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a timer.
          example: /#operation/timesheets.timers#get
    TimerSummarizedSchema:
      title: timers
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/TimerLinksSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        trackingCentre:
          $ref: '#/components/schemas/TrackingCentreSummarizedSchema'
    Timers:
      type: object
      properties:
        timer:
          title: timers
          type: array
          items:
            $ref: '#/components/schemas/TimerSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        count:
          title: Number of Timers
          minimum: 0
          type: integer
          description: Represents the total number of Timers.
          format: int32
          example: 3
      xml:
        name: Timers
    TimerUserResourceSummarizedSchema:
      title: timerUserResource
      type: object
      properties:
        workType:
          $ref: '#/components/schemas/WorkTypeSummarizedSchema'
        user:
          $ref: '#/components/schemas/UserSummarizedSchema'
        trackingCentre:
          $ref: '#/components/schemas/TrackingCentreSummarizedSchema'
    TimerUserResources:
      type: object
      properties:
        count:
          title: Number of Timer Resources
          minimum: 0
          type: integer
          description: Represents the total number of Timer Resources.
          format: int32
          example: 3
        timerUserResource:
          title: timerUserResource
          type: array
          items:
            $ref: '#/components/schemas/TimerUserResourceSummarizedSchema'
      xml:
        name: TimerUserResources
    TimesheetDateLock:
      required:
      - assignedToUser
      - createdBy
      - lockDate
      type: object
      properties:
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        timestampCreated:
          title: Timestamp Created
          type: string
          description: A UTC Timestamp of when the Timesheet Date Lock was created.
          example: 2011-12-03T10:15:30Z
        timestampArchived:
          title: Timestamp Archived
          type: string
          description: A UTC Timestamp of when the Timesheet Date Lock was archived.
          example: 2011-12-05T10:15:30Z
        assignedToUser:
          $ref: '#/components/schemas/UserSummarizedSchema'
        lockDate:
          title: Lock Date
          type: string
          description: The date of the timesheet date lock
          example: 2021-01-30
        archivedBy:
          $ref: '#/components/schemas/UserSummarizedSchema'
        createdBy:
          $ref: '#/components/schemas/UserSummarizedSchema'
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
      xml:
        name: TimesheetDateLock
    CalculationFields:
      title: Calculation Fields
      type: object
      properties:
        sellRate:
          title: Sell Rate
          type: number
          description: "The sell rate per block time, or if null, per hour."
          example: 80.0
        blockTime:
          title: Block time
          type: string
          description: "Block time is what we round our costs to (ie round all timesheet\
            \ entry calculations to the nearest 30 minutes). If this is null, the\
            \ block time is disabled and we do not round our entries."
          nullable: true
          example: PT15M
        workTypeName:
          title: Work Type Name
          type: string
          example: NT
        hourlyRate:
          title: Hourly Rate
          type: number
          example: 60.0
        overheadRate:
          title: Overhead Rate
          type: number
          example: 40.0
        totalCost:
          title: Total Cost
          type: number
          description: "The total cost rate of the entry, excluding tax."
          example: 200.0
        totalSell:
          title: Total Sell
          type: number
          description: "The total sell rate of the entry, excluding tax."
          example: 400.0
        costRate:
          title: Cost Rate
          type: number
          description: The cost rate per hour.
          example: 40.0
        rateType:
          $ref: '#/components/schemas/RateTypeSummarizedSchema'
      description: The point in time calculation fields for the Reimbursement.
      xml:
        name: CalculationFields
    OverheadSummarizedSchema:
      title: Belongs To Overhead
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/OverheadLinksSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      description: Details of the overhead which this Timesheet Entry belongs to.
    SignatureLabelLinksSchema:
      title: Signature Label Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Signature Label within the API.
          example: /signatures/labels/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Signature Label.
          example: /#operation/signatures.labels#get
    SignatureLabelSummarizedSchema:
      title: Belongs To SignatureLabel
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/SignatureLabelLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 3
          type: string
        zones:
          title: Zones
          uniqueItems: true
          type: array
          items:
            title: Zones
            type: string
            enum:
            - QUOTES
            - TASKS
            - TIMESHEETS
            - COMPLIANCE_FORMS
            - PURCHASE_ORDERS
            - INVOICES
            - SUPPLIER_QUOTES
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
      description: Details of the overhead which this Timesheet Entry belongs to.
    SignatureLinksSchema:
      title: Signature Label Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Signature within the API.
          example: /signatures/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Signature.
          example: /#operation/signatures#get
    SignatureSummarizedSchema:
      title: Weekly Signature
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/SignatureLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        extraFieldOne:
          title: Extra Field One
          maxLength: 50
          type: string
        extraFieldTwo:
          title: Extra Field Two
          maxLength: 50
          type: string
        timestampVoided:
          title: Timestamp Voided
          type: string
          description: When the given object was voided (in UTC time)
        signatureType:
          title: Signature Type
          type: string
          enum:
          - EMPLOYEE
          - CUSTOMER
          - CONTRACTOR
        signatureZone:
          title: Signature Zone
          type: string
          enum:
          - QUOTES
          - TASKS
          - TIMESHEETS
          - COMPLIANCE_FORMS
          - PURCHASE_ORDERS
          - INVOICES
          - SUPPLIER_QUOTES
        overhead:
          $ref: '#/components/schemas/SignatureLabelSummarizedSchema'
        approvedByUser:
          $ref: '#/components/schemas/UserSummarizedSchema'
        voidedByUser:
          $ref: '#/components/schemas/UserSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        timestampCreated:
          title: Timestamp Created
          type: string
          description: When the given object was created (in UTC time)
      description: Details of the weekly signature for this Reimbursement.
    TaskLinksSchema:
      title: Task Links
      required:
      - api
      - documentation
      - field
      - office
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Task within the API.
          example: /tasks/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Timesheet Entry.
          example: /#operation/tasks#get
        office:
          title: Link to Office
          type: string
          description: Link to the Task within the AroFlo Office interface.
          example: /ims/Site/Service/workrequest/index.cfm?viewexist=1&readtask=1&wrCoded=XXXXXXXXXXXXXXXXXXX
        field:
          title: Link to Field
          type: string
          description: Link to the Task within the AroFlo field interface.
          example: /Handheld/service/index.cfm?wrCoded=XXXXXXXXXXXXXXXXXXX
    TaskSummarizedSchema:
      title: Belongs To Task
      required:
      - jobNumber
      - referenceNumber
      - taskType
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/TaskLinksSchema'
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
          description: The name for the Task.
        status:
          title: Status
          type: string
          description: The status for the Task.
          enum:
          - QUOTE
          - NOT_STARTED
          - IN_PROGRESS
          - PENDING
          - COMPLETED
          - ARCHIVED
        referenceNumber:
          title: Reference Number
          type: integer
          description: The reference number for the Task.
          format: int32
        jobNumber:
          title: Job Number
          type: integer
          description: The job number for the Task.
          format: int32
        location:
          $ref: '#/components/schemas/LocationSummarizedSchema'
        taskType:
          $ref: '#/components/schemas/TaskTypeSummarizedSchema'
        customerOrderNumber:
          title: Customer Order Number
          type: string
          description: The customer order number for the Task.
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
        appliedTo:
          $ref: '#/components/schemas/OrgSummarizedSchema'
        createdByUser:
          $ref: '#/components/schemas/UserSummarizedSchema'
        timestampCreated:
          title: Timestamp Created
          type: string
          description: When the given object was created (in UTC time)
        timestampLastUpdated:
          title: Timestamp Last Updated
          type: string
          description: When the given object was last updated (in UTC time)
      description: Details of the task which this Timesheet Entry belongs to.
    TaskTypeSummarizedSchema:
      title: Belongs to Task Type
      type: object
      properties:
        description:
          title: Task type description
          type: string
          nullable: true
        name:
          title: Task type name
          type: string
        scheduleTextColor:
          $ref: '#/components/schemas/Color'
        scheduleBackgroundColor:
          $ref: '#/components/schemas/Color'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      description: Details of the task type which this task belongs to.
    TimeRange:
      title: Time Range
      required:
      - duration
      - minutes
      type: object
      properties:
        minutes:
          title: Minutes
          type: integer
          description: The minutes in the duration of the Time Range.
          format: int64
          example: 135
        startTime:
          title: Start Time
          type: string
          description: The Time Range's start time.
          example: 2011-12-03T18:15:00
        finishTime:
          title: Finish Time
          type: string
          description: The Time Range's finish time
          example: 2011-12-03T20:30:00
        duration:
          title: Duration
          type: string
          description: The Time Range's duration in ISO-8601 format.
          example: PT2H15M
      description: Details time range for the Reimbursement.
      xml:
        name: TimeRange
    TimesheetEntry:
      title: TimesheetEntries
      required:
      - assignedToUser
      - calculationFields
      - createdByUser
      - isCreatedByEndOfDayApproval
      - timeRange
      - workDate
      - workType
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/TimesheetEntryLinksSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        timestampCreated:
          title: Timestamp Created
          type: string
          description: A UTC Timestamp of when the Timesheet Entry was created.
          example: 2011-12-03T10:15:30Z
        assignedToUser:
          $ref: '#/components/schemas/UserSummarizedSchema'
        workType:
          $ref: '#/components/schemas/WorkTypeSummarizedSchema'
        isCreatedByEndOfDayApproval:
          title: Created Via End Of Day Approval
          type: boolean
          description: Was the Timesheet Entry created by end of day automation?
          example: false
        note:
          title: Note
          type: string
          description: The Timesheet Entry's note
          example: Example note.
        timeRange:
          $ref: '#/components/schemas/TimeRange'
        calculationFields:
          $ref: '#/components/schemas/CalculationFields'
        overhead:
          $ref: '#/components/schemas/OverheadSummarizedSchema'
        task:
          $ref: '#/components/schemas/TaskSummarizedSchema'
        labourSignature:
          $ref: '#/components/schemas/SignatureSummarizedSchema'
        weeklySignature:
          $ref: '#/components/schemas/SignatureSummarizedSchema'
        workDate:
          title: Work Date
          type: string
          description: A Timesheet Entry's work date
          example: 2007-12-03
        createdByUser:
          $ref: '#/components/schemas/UserSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: TimesheetEntry
    TimesheetEntryLinksSchema:
      title: TimesheetEntry Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Timesheet Entry within the API.
          example: /timesheets/entries/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Timesheet Entry.
          example: /#operation/timesheets.entries#get
    TimesheetEntries:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PageSchema'
        count:
          title: Number of TimesheetEntries
          minimum: 0
          type: integer
          description: Represents the total number of TimesheetEntries in the collection.
          format: int32
          example: 3
        items:
          title: TimesheetEntries
          type: array
          items:
            $ref: '#/components/schemas/TimesheetEntry'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: TimesheetEntries
    ExpenseTypeSummarizedSchema:
      title: Belongs To Expense Type
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ExpenseTypeLinksSchema'
        name:
          title: Expense type name
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      description: Details of the expense type which this Reimbursement belongs to.
    Reimbursement:
      title: Reimbursements
      required:
      - assignedToUser
      - calculationFields
      - createdByUser
      - expenseType
      - timeRange
      - workDate
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReimbursementLinksSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        timestampCreated:
          title: Timestamp Created
          type: string
          description: A UTC Timestamp of when the Reimbursement was created.
          example: 2011-12-03T10:15:30Z
        assignedToUser:
          $ref: '#/components/schemas/UserSummarizedSchema'
        note:
          title: Note
          type: string
          description: The Reimbursement's note
          example: Example note.
        timeRange:
          $ref: '#/components/schemas/TimeRange'
        calculationFields:
          $ref: '#/components/schemas/CalculationFields'
        expenseType:
          $ref: '#/components/schemas/ExpenseTypeSummarizedSchema'
        task:
          $ref: '#/components/schemas/TaskSummarizedSchema'
        weeklySignature:
          $ref: '#/components/schemas/SignatureSummarizedSchema'
        workDate:
          title: Work Date
          type: string
          description: A Reimbursement's work date
          example: 2007-12-03
        createdByUser:
          $ref: '#/components/schemas/UserSummarizedSchema'
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
      xml:
        name: Reimbursement
    ReimbursementLinksSchema:
      title: Reimbursement Links
      required:
      - api
      - documentation
      type: object
      properties:
        api:
          title: Link to self
          type: string
          description: Link to the Reimbursement within the API.
          example: /timesheets/reimbursements/XD000001
        documentation:
          title: Link to documentation
          type: string
          description: Link to the API Documentation for a Reimbursement.
          example: /#operation/timesheets.reimbursements#get
    Reimbursements:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PageSchema'
        count:
          title: Number of Reimbursements
          minimum: 0
          type: integer
          description: Represents the total number of Reimbursements in the collection.
          format: int32
          example: 3
        items:
          title: Reimbursements
          type: array
          items:
            $ref: '#/components/schemas/Reimbursement'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: Reimbursements
    AuthenticationContextSchema:
      type: object
      properties:
        permissions:
          title: Permissions
          type: array
          items:
            title: Permissions
            type: string
        user:
          $ref: '#/components/schemas/UserSummarizedSchema'
        userFeatureAccess:
          $ref: '#/components/schemas/UserFeatureAccessSummarizedSchema'
    UserFeatureAccessSummarizedSchema:
      title: Authenticated User's Feature Access
      type: object
      properties:
        canCreateClients:
          title: Can the user create clients?
          type: boolean
        canViewClients:
          title: Can the user view clients?
          type: boolean
    Username:
      type: object
      properties:
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        username:
          title: Username
          type: string
          example: john.smith
        user:
          $ref: '#/components/schemas/UserSummarizedSchema'
      xml:
        name: Username
    WorkType:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/WorkTypeLinksSchema'
        description:
          title: Work type Description
          type: string
        sellRate:
          title: Work type Sell Rate
          type: number
        blockTime:
          title: Work type Block Time
          type: integer
          format: int32
        loading:
          title: Work type Loading
          type: number
        quoteRate:
          title: Work type Quote Rate
          type: number
        rateType:
          $ref: '#/components/schemas/RateTypeSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
        name:
          title: Work type name
          type: string
        id:
          title: Identifier
          type: string
          description: Unique identifier for this item.
          example: XD000001
        legacyApiIdentifier:
          title: Legacy API Identifier
          type: string
          description: "Identifier associated with the legacy API implementation.\
            \ See: https://apidocs.aroflo.com"
          example: XD000001
        archived:
          title: Archived
          type: boolean
          description: A flag indicating if the instance is archived.
          example: true
      xml:
        name: WorkType
    WorkTypes:
      type: object
      properties:
        count:
          title: Number of work types
          minimum: 0
          type: integer
          description: Represents the total number of work types in the collection.
          format: int32
          example: 3
        items:
          title: work types
          type: array
          items:
            $ref: '#/components/schemas/WorkTypeSummarizedSchema'
        _entropy:
          title: Entropy
          type: string
          description: Random string of characters to aid in cryptographically securing
            the request payload. This value has no meaning associated with it and
            should be ignored.
      xml:
        name: WorkTypes
    WorkTypeOrgLinkSummarizedSchema:
      title: workTypeOrgLink
      type: object
      properties:
        belongsTo:
          $ref: '#/components/schemas/BusinessUnitSummarizedSchema'
        workType:
          $ref: '#/components/schemas/WorkTypeSummarizedSchema'
        trackingCentre:
          $ref: '#/components/schemas/TrackingCentreSummarizedSchema'
        listOrder:
          title: List/Display Order
          type: integer
          description: Numerical value representing the default ordering of item within
            it's containing collection.
          format: int32
          example: 1
    WorkTypeOrgLinks:
      type: object
      properties:
        count:
          title: Number of Work Type Org links
          minimum: 0
          type: integer
          description: Represents the total number of Work Type Org links.
          format: int32
          example: 3
        items:
          title: workTypeOrgLink
          type: array
          items:
            $ref: '#/components/schemas/WorkTypeOrgLinkSummarizedSchema'
      xml:
        name: WorkTypeOrgLinks
  securitySchemes:
    HMAC:
      type: apiKey
      description: "AroFlo Extended API uses HMAC-SHA512 Key Authentication. Your\
        \ Public Personal Token and Secret  Signing Key are accessible from [Site\
        \ Administration > Settings > General > AroFlo API](https://office.aroflo.com/ims/siteAdmin/API/index.cfm?view=1).\n\
        \nExample of usage:\n\n    $ curl -H \"Authorization: HMAC {PUBLIC_PERSONAL_TOKEN}:{HMAC_SIGNATURE}\"\
        \ -H \"Date: Tue, 30 May 2017 03:51:43 GMT\" -X GET \"https://api.aroflo.com/version\"\
        \n\n\nThe HMAC signature can be created by hashing the concatenation of the\
        \ following fields, with the `+` symbol between each, using the HMAC512 algorithm\
        \ and your AroFlo Secret Signing Key The HMAC signature then must be Base64\
        \ encoded. Some fields in the hash calculation are marked as being \"optional\"\
        \ and hence may be excluded from the payload.\n<table>\n  <thead>\n    <tr>\n\
        \      <th>Field</th>\n      <th>Example Value</th>\n    </tr>\n  </thead>\n\
        \  <tbody>\n    <tr>\n      <td><strong>HTTP Method</strong><br />HTTP Verb\
        \ in all upper case characters.</td>\n      <td>POST</td>\n    </tr>\n   \
        \ <tr>\n      <td><strong>Host IP Address</strong><br />This must match the\
        \ `HostIP` header field in your request.<br />If this field is omitted, then\
        \ you must not specify a HostIP header in your request.</td>\n      <td>127.0.0.1</td>\n\
        \    </tr>\n    <tr>\n      <td><strong>Request URI</strong><br />This field\
        \ includes everything after the host name in the URL including the Query String<br\
        \ />Do take note that your Query String keys need to be in alphabetical order.</td>\n\
        \      <td>/accounting/creditnotes?belongs_to=XD000001</td>\n    </tr>\n \
        \   <tr>\n      <td><strong>Accept Header</strong><br />Value of the Accept\
        \ Header</td>\n      <td>application/json</td>\n    </tr>\n    <tr>\n    \
        \  <td><strong>Public Personal Key</strong><br />This can be obtained from\
        \ your AroFlo account, along with your Secret Signing Key.</td>\n      <td>00000000-0000-0000-00000000</td>\n\
        \    </tr>\n    <tr>\n      <td><strong>Request Timestamp</strong><br />ISO\
        \ 8601 UTC timestamp of when the request is being made in the format `YYYY-MM-DDTHH:mm:ss.SSSZ`.<br\
        \ />This same timestamp must be included in your request as the `Date` header.<br\
        \ />The `Date` header field does not need to be in the same format, but must\
        \ equate to the exact same value of this field.</td>\n      <td>2018-07-25T01:39:57.135Z</td>\n\
        \    </tr>\n    <tr>\n      <td><strong>MD5 Content Hash</strong><br />MD5\
        \ Hash of your request body using Upper Case characters.<br />This field must\
        \ be omitted if your request body has a length of 0 characters.</td>\n   \
        \   <td>5EB63BBBE01EEED093CB22BB8F5ACDC3</td>\n    </tr>\n  </tbody>\n</table>\n\
        The concatenation of the example values in the table above looks like:\n\n\
        \    POST+127.0.0.1+/accounting/creditnotes?belongs_to=XD000001+application/json+00000000-0000-0000-00000000+2018-07-25T01:39:57.135Z+5EB63BBBE01EEED093CB22BB8F5ACDC3\n\
        \nBelow is an example pre-request script for [PostMan](https://www.postman.com/),\
        \ that can be used to Authenticate your requests:\n\n    function interpolate\
        \ (value) {\n        const {Property} = require('postman-collection');\n \
        \       return Property.replaceSubstitutions(value, pm.variables.toObject());\n\
        \    }\n    \n    // Obtain your token and signing key from the environment\
        \ variables.\n    const publicPersonalToken = pm.environment.get('publicPersonalToken');\n\
        \    const secretSigningKey = pm.environment.get('secretSigningKey');\n  \
        \  \n    // prepare the payload to pass into the HMAC algorithm\n    const\
        \ payload = [];\n     \n    // Obtain the HTTPVerb from the request\n    const\
        \ httpVerb = pm.request.method.toUpperCase();\n    payload.push(httpVerb);\n\
        \    \n    // You may include the IP Address that you are sending from the\
        \ request from.\n    // This is an optional field.\n    // If you do decide\
        \ to provide it, your connections will be more secure, but we understand in\
        \ some circumstances this is not possible.\n    const hostIP = pm.environment.get('HostIP');\n\
        \    if (typeof hostIP != 'undefined' && hostIP) {\n        payload.push(hostIP);\n\
        \        pm.request.headers.add({ \n            disabled: false,\n       \
        \     key: 'HostIP', \n            name: 'HostIP', \n            value: hostIP\n\
        \        });\n    }\n    \n    // URI string (URL path + query string)\n \
        \   const uri = interpolate(require('url').parse(request.url).path);\n   \
        \ const findbase = '%7B%7BbaseUrl%7D%7D';\n    if (uri.indexOf(findbase) >=0)\
        \ {\n        payload.push( uri.substring( findbase.length ) );\n    } else\
        \ {\n        payload.push(uri);\n    }\n    \n    // accept header\n    const\
        \ accept = interpolate(pm.request.headers.get('Accept'));\n    if (typeof\
        \ accept == 'undefined' || !accept) {\n        // default to JSON\n      \
        \  payload.push('application/json');\n        pm.request.headers.add({ \n\
        \            disabled: false,\n            key: 'Accept', \n            name:\
        \ 'Accept', \n            value: 'application/json'\n        });\n    } else\
        \ {\n        payload.push(accept);\n    }\n    \n    // add your Public Personal\
        \ Token\n    payload.push(publicPersonalToken);\n    \n    // We now need\
        \ to set a timestamp as an ISO 8601 UTC timestamp e.g. '2018-07-25T01:39:57.135Z'\n\
        \    var d = new Date();\n    d.setMilliseconds(0);\n    payload.push(d.toISOString());\n\
        \    pm.request.headers.add({ \n        disabled: false,\n        key: 'Date',\
        \ \n        name: 'Date', \n        value: d.toUTCString()\n    });\n    \n\
        \    // if it is provided, calculate a HASH of the Reqeust body\n    const\
        \ requestBody = interpolate(pm.request.body);\n    if (typeof requestBody\
        \ != 'undefined' && requestBody.toString()) {\n        // Append MD5 hash\
        \ of request body\n        var bodyHash = CryptoJS.MD5(requestBody).toString();\n\
        \        payload.push(bodyHash.toUpperCase());\n    }\n    \n    // Calculate\
        \ the HMAC signature and add the authorization header to the request\n   \
        \ const hmacSignature = CryptoJS.HmacSHA512(payload.join('+'), secretSigningKey);\n\
        \    const base64HmacSignature = CryptoJS.enc.Base64.stringify(hmacSignature);\n\
        \    pm.request.headers.add({ \n        disabled: false,\n        key: 'Authorization',\
        \ \n        name: 'Authorization', \n        value: 'HMAC ' + publicPersonalToken\
        \ + ':' + base64HmacSignature\n    });\n"
      name: Authorization
      scheme: HMAC
      bearerFormat: "Authorization: HMAC {PUBLIC_PERSONAL_TOKEN}:{HMAC_SIGNATURE}"
x-tagGroups:
- name: Assets
  tags:
  - Assets
  - Asset Categories
  - Asset Documents & Photos
  - Asset Notes
  - Asset Types
  - Sub Assets
- name: Bills
  tags:
  - Bills
  - Bill Documents & Photos
  - Bill Line Items
  - Bill Notes
- name: Compliance
  tags:
  - Certifications
  - Compliance Alerts
  - OHS Forms
- name: Credit Notes
  tags:
  - Credit Notes
  - Credit Note Allocations
  - Credit Note Documents & Photos
  - Credit Note Line Items
  - Credit Note Notes
  - Credit Note Payments
- name: Documents
  tags:
  - Documents
  - Document Folders
- name: Geography
  tags:
  - Countries
  - States
- name: Inventory
  tags:
  - Inventory
  - Inventory Categories
  - Inventory Documents & Photos
  - Inventory Lists
  - Inventory List Categories
  - Custom Holders
- name: Invoices
  tags:
  - Invoices
  - Invoice Documents & Photos
  - Invoice Line Items
  - Invoice Notes
- name: Locations
  tags:
  - Locations
  - Location Documents & Photos
  - Location Notes
- name: Message Board
  tags:
  - Messages
- name: Orgs
  tags:
  - Business Units
  - Business Unit Priorities
  - Business Unit Hours of Work
  - Clients
  - Client Priorities
  - Client Specific Rates
  - Suppliers
- name: Periodic Tasks
  tags:
  - Periodic Tasks
  - Periodic Task Documents & Photos
  - Periodic Task Notes
- name: Permission Groups
  tags:
  - Permission Groups
  - Permission Group User Links
- name: Personnel
  tags:
  - Crews
  - Positions
  - Users
  - User Documents & Photos
  - User Notes
  - Usernames
- name: Priorities
  tags:
  - Priorities
- name: Projects
  tags:
  - Projects
  - Project Documents & Photos
  - Project Stages
  - Project Stage Types
  - Project Types
- name: Project Retentions
  tags:
  - Project Retentions
  - Project Retention Schemes
- name: Purchase Orders
  tags:
  - Purchase Orders
  - Purchase Order Documents & Photos
  - Purchase Order Line Items
  - Purchase Order Notes
- name: Quotes
  tags:
  - Quotes
  - Quote Documents & Photos
  - Quote Notes
- name: Reporting
  tags:
  - Tracking Centres
  - Tracking Centre Defaults
- name: Transaction Terms
  tags:
  - Transaction Terms
- name: Supplier Quotes
  tags:
  - Supplier Quotes
  - Supplier Quote Documents & Photos
  - Supplier Quote Notes
- name: Tasks
  tags:
  - Tasks
  - Task Documents & Photos
  - Task Types
  - Task Notes
- name: Timesheets
  tags:
  - Expense Types
  - Labour Timers
  - Hours of Work
  - Overheads
  - Rate Types
  - Timesheets
  - Timesheet Date Locks
  - Timesheet Reimbursements
  - Timesheet Entries
  - Work Types
- name: Users
  tags:
  - Users
  - User Hours of Work
- name: Work Orders
  tags:
  - Work Orders
  - Work Order Documents & Photos
  - Work Order Line Items
  - Work Order Notes
- name: Misc
  tags:
  - GraphQL
  - Service Information
